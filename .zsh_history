yarn add express
fonts
sudo pacman -S ttf-cascadia-code
vim /etc/fonts/local.con
vim /etc/fonts/local.conf
sudo vim /etc/fonts/local.conf
sudo pacman -S ttf-cascadia-code
code --restore
node server.js
ls
node server.js
nodemon server.js
fuser -k 4000/tcp
fuser -k 5000/tcp
nodemon server.js
man fortune
fortune -c
man fortune
fortune -m
fortune funny
fortune funny not-funny
fortune node
fortune -n 34
fortune
fortune -a
fortune -c
fortune
vim ~/.zshrc
vim ~/.zprofile
vim ~/.zsh_profile
vim ~/.zshenv
cd ls
cd Desktop/
ls
git clone https://github.com/ZoomTen/lightdm-webkit-theme-macos.git
ls
cd /usr/share
sl
sl | grep lightdm
cd lightdm-gtk-greeter-settings
ls
vlock
vlock -a -s\

switch-to-greeter
dm-tool switch-to-greeter
sudo pacman -S lightdm lightdm-webkit2-greeter wget\

sudo systemctl status lightdm
wget git.io/webkit2 -O theme.tar.gz\

ls
mkdir glorious\

mv theme.tar.gz glorious/\

cd glorious
tar zxvf theme.tar.gz\

sl
rm theme.tar.gz\

cd ..\

sudo mv glorious/ /usr/share/lightdm-webkit/themes/\

sudo reboot\

dm-tool switch-to-greeter
vim ~/.zshrc
lock
whereis lightdm
lightdm
cd /etc/lightdm
ls
cd
cd /usr/lib/lightdm
ls
cat lightdm-guest-session
cd
whereis lightdm
cd /etc/li
cd /etc/lightdm
ls
cat lightdm-gtk-greeter.conf
cat Xsession
lock
sudo vim /etc/lightdm/lightdm.conf
sudo systemctl status lightdm
sudo systemctl reload lightdm
sudo systemctl restart lightdm
pof
sudo pacman -S lightdm-webkit2-greeter-settings
yay -S lightdm-webkit2-greeter-settings
sudo pacman -S lightdm-webkit2-greeter\

sudo systemctl restart lightdm
vim /etc/lightdm/lightdm-gtk-greeter.conf
sudo vim /etc/lightdm/lightdm-webkit2-greeter.conf
sudo systemctl restart lightdm
sudo vim /etc/lightdm/lightdm-webkit2-greeter.conf
cd /mnt/data/walls
ls
cd /usr/share/backgrounds
ls
sudo cp /mnt/data/walls/pp.jpeg /usr/share/backgrounds
sudo systemctl restart lightdm
alias | grep lock
lock
sudo vim /etc/lightdm/lightdm-webkit2-greeter.conf
whereis glorious
su
lock
sudo systemctl restart lightdm
lock
sudo vim /etc/lightdm/lightdm-webkit2-greeter.conf
cd /usr/share/backgrounds
ls
cd
cd /etc/lightdm
ls
cd /
cd
cd Desktop
ls
git clone git@github.com:WebDevSimplified/ocean-trash.git
cd Desktop
git clone https://github.com/WebDevSimplified/ocean-trash.git
ls
cd ocean-trash
ls
vsc
yay -S -S lightdm-webkit-theme-aether
yay -S lightdm-webkit-theme-aether
sudo vim /etc/lightdm/lightdm-webkit2-greeter.conf
sudo systemctl restart lightdm
cd /var/lib
ls
cd AccountsService
ls
cd users
ls
su
rbt
cd /usr/share/lightdm-webkit
ls
cd themes
ls
cd lightdm-webkit-theme-aether
ls
cat index.
cat index.html
cat index.theme
ls
cat package.json
ls
cd src/img/wallpapers
ls
sudo cp /mnt/data/walls/wall1-edited.png /usr/share/lightdm-webkit/themes/lightdm-webkit-theme-aether/src/img/wallpapers
sudo systemctl restart lightdm
cat ~/.zsh_history
cd /usr/share/lightdm-webkit/themes/lightdm-webkit-theme-aether
ls
vsc
cd ../
ls
sudo cp -r lightdm-webkit-theme-aether /home/bhumit070/Desktop
cd Desktop
sl
ls
vs lightdm-webkit-theme-aether
pwd
cd Desktop
vsc lightdm-webkit-theme-aether
alias  | grep vs
cat ~./zshrc | tail
cat ~/.zshrc | tail
vs lightdm-webkit-theme-aether
ls
pwd
chmod 777 .
sudo chmod 777 .
screenfetch
neofetch
cat ~/.zshrc | tail
vs ~/.zshrc
tty
ttyclock
tty
stop nginx
echo $(systemdPrefix)
echo $($systemdPrefix)
echo $(systemdPrefix)
stop nginx
service start ngin
service start nginx
service 
service start nginx
service reload nginx
sd
cd dotfiles
l
vsc
git add .
git commit -m "added functions for systemd"
git push
git status
xrander
xrandr
sudp pacman -S xrander
sudo pacman -S xrander
sudo pacman -S xrandar
sudo pacman -S xrandr
yay -S xrandr
uname
man kernel
uname -r
ulauncher
ulauncher --toggle
ulauncher -toggle
ulauncher -t
man ulauncher
ulauncher --help
ulauncher
rbt
cat ~/.profile
vim ~/.profile
rbt
vim ~/.profile
rbt
vim ~/.profile
vim ~/.xinitrc
rbt
notify-send
notify-send "this"
notify-send "this is an notification"
man notify-send
cd /mnt/programmes/js/
s
ls
vs notification
rbt
yay -S xfdashboard-git
yay -S xrandr
xrandr
xrander
xrandar
sudo pacman -S xorg-xrandr
xrandr
cd /mnt/data/series/one\ piece/970-âƒ¹¾âƒ¹¾
ls
uname -r
cd /mnt/programmes/Bills/
ls
cd back
ls
find node_modules
ls
node .
ls
node app.js
mysql
node mysql
node app.js
ls
cat db.js
vim db.js
mysqls
mysql
ls
docker container ps
docker container ps -a
mysqlstop
alias | grep mysql
cd /mnt/data/databases
ls
cd mysql
ls
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=true -p 3306:3306 -v /mnt/data/databases/mysql:/var/lib/mysql mysql
docker volume ls 
ls
git status
ls
l
ls
git checkout .
l
cd ../
ls
mysql
ddc
mysql
ddc
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=true -p 3306:3306 -v /mnt/data/databases/mysql:/var/lib/mysql mysql
docker container ls
docker container ps -a
mysqls
mysqlstop
vs some.js
dps
dps -a
dps -a 
docker container ps -a
docker run\
--name mysql\
	- e MYSQL_ALLOW_EMPTY_PASSWORD = yes\
		- p 3306: 3306\
			- v / mnt / data / databases / mysql: /var/lib / mysql\
mysql
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -p 3306: 3306  -v /mnt/data/databases/mysql:/var/lib/mysql mysql
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -p 3306:3306  -v /mnt/data/databases/mysql:/var/lib/mysql mysql
mysqlstop
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -p 3306:3306  -v /mnt/data/databases/mysql:/var/lib/mysql mysql
docker pull mysql
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -p 3306:3306  -v /mnt/data/databases/mysql:/var/lib/mysql mysql
mysqlstop
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -p 3306:3306  -v /mnt/data/databases/mysql:/var/lib/mysql mysql
postgres
docker ps -a
docker container 
docker container stats mysql
docker container logs
docker container logs mysql
mysqlstop
mysql
docker container logs mysql
docker container logs postgres
mongo
mongos
docker ps -a
docker container logs mongodb
docker ps -a
docker container logs mongodb
ls
cd /mnt/data
ls
cd databases
ls
rm -rf *
ls
mkdir mongo mysql postgres
ls
ddc
mongo
mongos
docker container logs mongodb
docker container logs mongo
docker container logs mongodb
docker container logs mongodb | grep fatal
docker container logs mongodb
docker volume ls 
sl
postgres
mysql
docker volume ls
docker ps -a
mysqls
docker exec -it mysql
docker exec -it mysql bash
ps aux
ps aux | docker
ps aux | grep docker
ps aux | grep mysql
mysql
mysqlstop
mongostop
cd dotfiles
ls
cat .zshrc
vim ~/.zshrc
docker volume craete postgres
docker volume create postgres
postgres
docker container logs postgres
ls
alias postgres
dcc
ddc
zsh
alias postgres
postgres
dps
docker volume create mongo 
docker volume create mysql
vim ~/.zshrc
zsh
zrc
postgres & mongo & mysql
dcc
ddc
postgres & mongo & mysql
docker ps -a
ddc
cd /mnt/programmes/Bills
ls
git status
git checkout .
ls
git clean -fd
ls
git status
la
ls
vsc
ls 0a
ls -a
git log
cd back
ls
node app.js
mysqls
mysql
mysqls
sudo pacman -S dbeaver
alias postgres
docker ps -a
postgres
mysql
mysqls
ls
mysql
mysqls
sl
ls
cd /mnt/programmes/node
ls
cd typeorm
ls
cd src
ls
cat index.ts
cd ../
ls
vsc
mysqls
npm start
mongos
mongo
mongos
code ~/.zshrc
mysqls
docker exec -it mysql bash
docker ps -a
npm start
mysqls
npm start
mysqlstop
mysql
npm start
mysqlstop
mysql
npm start
mysqls
npm start
sd stop nginx
npm start
docker ps -a
sd status nginx
systemctl statusnginx
systemctl status nginx
sd start ngixn
sd start nginx
sd stop nginx
sg
sd start nginx
sd status nginx
systemctl status nginx
yay -s robo3t-bin
mongos
docker volume ls
node app.js
npm start
docker exec -it mysql bash
node app.js
npm s
npm start
docker volume
docker volume rm mysql
mysqlstop
docker volume rm mysql
docker volume create mysql
mysql
docker volume ls
npm start
alias mysql
docker run -d --name mysql -e MYSQL_USER=bhumit070 -e MYSQL_PASSWORD=bhumit070 -p 3306:3306 -v mysql:/var/lib/mysql mysql
mysqlstop
docker run -d --name mysql -e MYSQL_USER=bhumit070 -e MYSQL_PASSWORD=bhumit070 -p 3306:3306 -v mysql:/var/lib/mysql mysql
docker volume ps -a
docker container ps -a
npm start
mysqls
docker exec -it mysql bash
npm start
mysqls
docker exec -it mysql bash
npm start
mysqlstop
cd /mnt/programmes/go/yt-hitesh
vs mongoapi
docker volueme ls
docker volume ls
docker volume rm mysql
docker image rm mysql
docker pull mysql
yay -S emoji-keyboard-git
ping google.com
yay -S emoji-keyboard-git
ls
docker volueme ls
docker voluem ls
docker volume ls
docker volume create mysql
docker image ls
docker image rm archlinux
docker image rm ubuntu
ls
mysql
docker container ps -a
mysqlstop
postgresstop
mongostop
vs
npm start
docker ps -a
mysql
npm start
docker exec -it mysql mysql
cd /mnt/programmes/Bills
ls
docker exec -it mysql mysql < bills.sql
docker exec -it mysql bash < bills.sql
docker exec -it mysql mysql < bills.sql
docker exec -it mysql mysql 
docker exec -it mysql bash
tty
docker cp
cd /mnt/programmes/Bills
ls
docker ps -a
docker cp bills.sql mysql:/bills.sql
docker ps -a
mysqls
docker exec -it mysql bash
dps
ddc
yay -S emoji-keyboard-git
cd /home/bhumit070/.cache
ls
cd yay
ls
rm -rf emoji-keyboard-git
sudo pacman -S gnome-shell
gnome-shell-extension-clipboard-indicator
sudo pacman -Sgnome-shell-extension-clipboard-indicator
sudo pacman -S gnome-shell-extension-clipboard-indicator
yay gnome-shell-extension-clipboard-indicator
gnome-extensions
gnome-extensions list
sudo pacman -R gnome-extensions
gnome-extensions list
gnome-extensions
gnome-extensions install
gnome-shell
alias mysql
alias mongo
alias postgres
vim ~/.zshrc
vim ~/.zsh_pro
vim ~/.zsh_profile
vim ~/.zshenv
screenfetch
sudo pacman -S xmonad xmonad-contrib
whereis xmonad
man xmonad
xrandr
mkdir .xmonad
cd .xmonad
ls
xmonad --recompile
vs xmonad.hs
sudo pacman -S xmobar
xmonad --recompile
xmobar
reboot
xrandr
xrandr -s 
xrandr -s  1920x1080
brave
neofetch
sudo pacman -Syu
code
brave
xmonad --recompile
vsc
vs
vs ~/.xmonad/xmonad.hs
sudo pacman -S picom
sudo pacman -S nm-applet
sudo pacman -S volumeicon
yay -S nm-applet
nm-applet
sudo pacman -S network-manager-applet 
xmonad --recompile
logout
lightdm-session-quir
lightdm-session
man lightdm
lightdm -h
man lightdm
dm-tool logout
dm-tool --help
rbt
nitrogen
rb
rbt
nitrogen --restore
cd /mnt/data
ls
cd walls
ls
ulauncher
htop
vim ~/.config/alacritty/alacritty.yml
nitrogen --restore
nitrogen
rbt
ls
light
sudo pacman -S light
man light
light -h
light -L
light -v
cd ~/.xinitrc
cat ~/.xinitrc
echo $usermodmap
xmoadmap
xmodmap
whereis xmodmap
cd /etc/X11/xinit
ls
cd xinitrc.d
cd ../
cat xinitrc
echo $sysmodmap
echo $usermodmap
cd ~/.Xmoadmap
cd ~/.Xmodmap
cat ~/.Xmodmap
cd /etc/X11/xinit
ls
ls -a
cat .Xmoadmap
sudo pacman -S xf86-input-libinput
echo "pointer = 1 2 3 5 4 7 6 8 9 10 11 12" > ~/.Xmodmap && xmodmap ~/.Xmodmap
dm-tool lightdm-session-quit
dm-tool --help
dm-tool switch-to-greeter
rbt
brave
echo "pointer = 1 2 3 5 4 7 6 8 9 10 11 12" > ~/.Xmodmap && xmodmap ~/.Xmodmap
cat ~/.Xmoadmap
xmodmap ~/.Xmoadmap
ks
ls
ls -a
vim .Xmoadmap
cat ~/.Xmoadmap
cat ~/.Xmoadmap > ~/.Xmodmap
cat ~/.Xmodmap
rbt
ls -a
ls
vim .Xmodmap
echo "pointer = 1 2 3 5 4 7 6 8 9 10 11 12"
vim .Xmodmap
rbt
xmodmap ~/.Xmoadmap
xmodmap ~/.Xmodmap
cd /etc/X11/xorg.conf.d
ls
sudo vim 30-touchpad.conf
startx
rbt
cd /etc/X11/xorg.conf.d
ls
cat 30-touchpad.conf
vim 30-touchpad.conf
sudo vim 30-touchpad.conf
rbt
htop
nm-applet
sudo pacman -S pulseaudio
pulseaudio
mkdir ~/.config/pulse
cd ~/.config/pulse
ls
cat cookie
pulseaudio --help
pulseaudio --start
pacman -S alsa-utils\

sudo pacman -S alsa-utils\

alsamixer\

sudo pacman -S volumeicon
volumeicon
volumeicon --help
volumeicon --display
volumeicon --display=1
alsamixer
volumeicon --help
alsamixer
sudo pacman -S pavucontrol
yay -S paman
sudo pacman -S xdotool
ls
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
htop
sudo pacman -S pavucontrol
sudo systemctl enable pulseaudio.socket --now
cd Desktop
ls
vim volume.sh
chmod +x volume.sh
./volume.sh
./volume.sh increase
cd Desktop
./volume.sh increase
cat volume.sh
sudo pacman -S Xbondkeys
sudo pacman -S Xbindkeys
sudo pacman -S xbindkeys
sudo pacman -S pactl
yay -S pactl
pactl
pactl set-sink-volume @DEFAULT_SINK@ +1000
pactl set-sink-volume @DEFAULT_SINK@ -1000
pactl set-sink-volume @DEFAULT_SINK@ +1000
xbindkeya
xbindkeys
vim .xbindkeysrc
sudo pacman -S xbindkeys_config-gtk2
yay -S xbindkeys_config-gtk2
vim .xbindkeysrc
htop
cd /mnt/programmes/go//yt-hitesh
ls
vs mongoapi
acpi
notify-send $(acpi)
notify-send 
man notify-send
notify-send "this is an notification"
yay -S https://aur.archlinux.org/packages/deadd-notification-center/
yay -Sdeadd-notification-center
yay -S deadd-notification-center
vim .xbindkeysrc
volume
volumeicon
notify-send "this is an notification"
vim .xbindkeysrc
go build main.go
./main
mongo
./main
mongos
brave
vim .xbindkeysrc
xbindkeys
vim .xbindkeysrc
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
htop
xmo
xmonad --recompile
rbt
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
cd .xmonad
ls
code xmonad
code xmonad.
code xmonad.hs
xmonad --recompile
ls
cd .xmonad
ls
xmonad --recompile
time
ls
cp xmonad.hs xmonad-bhumit070.hs
xmonad --recompile
cd .xmonad
code xmonad.hs
xmonad --recompile
xmobar
sudo pacman -S xmobar
xmobar
sudo systemctl disable lightd
sudo systemctl disable lightdm
rbt
power
htop
pod
pof
vim ~/.xmonad/xmonad.hs
iwctl
vim ~/.xmonad/xmonad.hs
sudo pacman -S lxsession
sudo pacman -S wifi-menu
settings
sd status NetworkManager
nmcli
nmcli c
nmcli d wifi list
nmcli c
nmcli d connect bhumit
nmcli d connect wlan0
nmcli d connect wlp2s0
nmcli d connect wlp2s0 bhunit
nmcli d connect wlp2s0 bhumit
nmcli d connect wlp2s0
nmcli d
nmcli device connect
nmcli device connect wlp2s0
nmcli device connect wlp2s0 bhumit
nmcli device connect wlp2s0
nmcli device connect wlp2s0 'bhumit'
nmcli device connect wlp2s0 --wireless 'bhumit'
nmtui
nm-applet
xmobar
nm-apple
nm-applet
man nm-applet
nm-connection-editor
rbt
nmcli nm wifi on
nmcli radio wifi on
man nmcli
vim ~/.xmonad/xmonad.hs
vs ~/.xmonad/xmonad.hs
xmonad --recompile
yad
Yad
xmonad --recompile
rbt
sudo apt-get remove gnome
sudo apt-get remove gnome-session
sudo pacman -S gnome
gnome-boxes
ls
alsamixer
vim .xbindkeysrc
pactl
alsamixer
pulseaudio --start
pulseaudio
alsamixer
sd status pulseaudio
systemctl --system enable --now pulseaudio.service\

sudo pacman -S pulseaudio
sudo systemctl status pulseaudio
pulseaudio
man pulseaudio 
pulseaudio --help
pulseaudio --system=true
sudo pulseaudio --system=true
pavucontrol
man pavucontrol
pavucontrol --help
pavucontrol --help-all
pavucontrol --help
vim .xbindkeys
ls -a
vim .xbindkeysrc
pactl
vim .xbindkeysrc
pactl set-sink-mute @DEFAULT_SINK@ toggle
sudo systemctl status pulseaudio
vim .xbindkeysrc
vim ~/.xmonad/xmonad.hs
lxsession
rbt
pulseaudio --daemonize=no --system --realtime --log-target=journal
vim ~/.config/alacritty/alacritty.yml
sl
ls
xrandr
ls
cat mpv-shot0001.jpg
thunar
cmatrix -s
cmatrix
ls
lsblk
sl
lolcat
sudo pacman -S lolcat
lolcat
lolcat .
lolcat ls
ls | lolcat
ls | lolcat -a
sudo pacman -S cowsay
cowsay
cowsay "Bhoomit"
man cowsay
cowsay -e "EYE"
cowsay -e "EYE" "ok"
cowsay -e "ðƒ¿ƒ¸ƒ­ðƒ¿ƒ¸ƒ­" "ok"
htop
xombar
xmobar
man xmobar
xmobar --help
xmobar -d
dmenu_run -v
man dmenu
dmenu_run -i -l
dmenu_run -i
dmenu_run -l -i
picom
man picom
cd /mnt/programmes/react
ls
npx create-react-app toast-global
ls
cd toast-global
vsc
yarn serve
yarn star
yarn start
yarn add react-toastify
htop
ls
sl
man sl
man ls
dmenu_run -l -i
cmatrix
pod
pof
rbt
htop
ls
sl
pacman -Q alacritty
pacman -Q windows
cd /mnt/programmes/go/yt-hitesh
ls
mkdir go-routines
vs go-routines
touch main.go
time touch main.js
time (touch main.js)
rm -rf main.
rm -rf main.js
go run main.go
sudo pacman -S qbittorrent
go run main.go
ping google.com
go run main.go
cat .xmonad
cd .xmonad
ls
cat xmonad.h
cat xmonad.hs
htop
ping google.com
ls
cp xmonad-bhumit070.hs ~/dotfiles
cp xmonad.hs ~/dotfiles
ls
cd ~/dotfiles
ls
git status
git add .
git commit -m "Added xmonad configs"
git push 
dmenu_run -l -i
dmenu_run -q
dmenu_run -h
dmenu_run -m
dmenu_run --auto-repair
ls .zsh*
cp .zsh* ~/dotfiles
echo $HISTFILE                                                                                                                                                                                                  
echo $HISTFILE                                                                                                                                                                                                  
echo $HISTFILE                                                                                                                                                                                
echo $SAVEHIST
vim .zshrc
