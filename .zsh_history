yarn add express
fonts
sudo pacman -S ttf-cascadia-code
vim /etc/fonts/local.con
vim /etc/fonts/local.conf
sudo vim /etc/fonts/local.conf
sudo pacman -S ttf-cascadia-code
code --restore
node server.js
ls
node server.js
nodemon server.js
fuser -k 4000/tcp
fuser -k 5000/tcp
nodemon server.js
man fortune
fortune -c
man fortune
fortune -m
fortune funny
fortune funny not-funny
fortune node
fortune -n 34
fortune
fortune -a
fortune -c
fortune
vim ~/.zshrc
vim ~/.zprofile
vim ~/.zsh_profile
vim ~/.zshenv
cd ls
cd Desktop/
ls
git clone https://github.com/ZoomTen/lightdm-webkit-theme-macos.git
ls
cd /usr/share
sl
sl | grep lightdm
cd lightdm-gtk-greeter-settings
ls
vlock
vlock -a -s\

switch-to-greeter
dm-tool switch-to-greeter
sudo pacman -S lightdm lightdm-webkit2-greeter wget\

sudo systemctl status lightdm
wget git.io/webkit2 -O theme.tar.gz\

ls
mkdir glorious\

mv theme.tar.gz glorious/\

cd glorious
tar zxvf theme.tar.gz\

sl
rm theme.tar.gz\

cd ..\

sudo mv glorious/ /usr/share/lightdm-webkit/themes/\

sudo reboot\

dm-tool switch-to-greeter
vim ~/.zshrc
lock
whereis lightdm
lightdm
cd /etc/lightdm
ls
cd
cd /usr/lib/lightdm
ls
cat lightdm-guest-session
cd
whereis lightdm
cd /etc/li
cd /etc/lightdm
ls
cat lightdm-gtk-greeter.conf
cat Xsession
lock
sudo vim /etc/lightdm/lightdm.conf
sudo systemctl status lightdm
sudo systemctl reload lightdm
sudo systemctl restart lightdm
pof
sudo pacman -S lightdm-webkit2-greeter-settings
yay -S lightdm-webkit2-greeter-settings
sudo pacman -S lightdm-webkit2-greeter\

sudo systemctl restart lightdm
vim /etc/lightdm/lightdm-gtk-greeter.conf
sudo vim /etc/lightdm/lightdm-webkit2-greeter.conf
sudo systemctl restart lightdm
sudo vim /etc/lightdm/lightdm-webkit2-greeter.conf
cd /mnt/data/walls
ls
cd /usr/share/backgrounds
ls
sudo cp /mnt/data/walls/pp.jpeg /usr/share/backgrounds
sudo systemctl restart lightdm
alias | grep lock
lock
sudo vim /etc/lightdm/lightdm-webkit2-greeter.conf
whereis glorious
su
lock
sudo systemctl restart lightdm
lock
sudo vim /etc/lightdm/lightdm-webkit2-greeter.conf
cd /usr/share/backgrounds
ls
cd
cd /etc/lightdm
ls
cd /
cd
cd Desktop
ls
git clone git@github.com:WebDevSimplified/ocean-trash.git
cd Desktop
git clone https://github.com/WebDevSimplified/ocean-trash.git
ls
cd ocean-trash
ls
vsc
yay -S -S lightdm-webkit-theme-aether
yay -S lightdm-webkit-theme-aether
sudo vim /etc/lightdm/lightdm-webkit2-greeter.conf
sudo systemctl restart lightdm
cd /var/lib
ls
cd AccountsService
ls
cd users
ls
su
rbt
cd /usr/share/lightdm-webkit
ls
cd themes
ls
cd lightdm-webkit-theme-aether
ls
cat index.
cat index.html
cat index.theme
ls
cat package.json
ls
cd src/img/wallpapers
ls
sudo cp /mnt/data/walls/wall1-edited.png /usr/share/lightdm-webkit/themes/lightdm-webkit-theme-aether/src/img/wallpapers
sudo systemctl restart lightdm
cat ~/.zsh_history
cd /usr/share/lightdm-webkit/themes/lightdm-webkit-theme-aether
ls
vsc
cd ../
ls
sudo cp -r lightdm-webkit-theme-aether /home/bhumit070/Desktop
cd Desktop
sl
ls
vs lightdm-webkit-theme-aether
pwd
cd Desktop
vsc lightdm-webkit-theme-aether
alias  | grep vs
cat ~./zshrc | tail
cat ~/.zshrc | tail
vs lightdm-webkit-theme-aether
ls
pwd
chmod 777 .
sudo chmod 777 .
screenfetch
neofetch
cat ~/.zshrc | tail
vs ~/.zshrc
tty
ttyclock
tty
stop nginx
echo $(systemdPrefix)
echo $($systemdPrefix)
echo $(systemdPrefix)
stop nginx
service start ngin
service start nginx
service 
service start nginx
service reload nginx
sd
cd dotfiles
l
vsc
git add .
git commit -m "added functions for systemd"
git push
git status
xrander
xrandr
sudp pacman -S xrander
sudo pacman -S xrander
sudo pacman -S xrandar
sudo pacman -S xrandr
yay -S xrandr
uname
man kernel
uname -r
ulauncher
ulauncher --toggle
ulauncher -toggle
ulauncher -t
man ulauncher
ulauncher --help
ulauncher
rbt
cat ~/.profile
vim ~/.profile
rbt
vim ~/.profile
rbt
vim ~/.profile
vim ~/.xinitrc
rbt
notify-send
notify-send "this"
notify-send "this is an notification"
man notify-send
cd /mnt/programmes/js/
s
ls
vs notification
rbt
yay -S xfdashboard-git
yay -S xrandr
xrandr
xrander
xrandar
sudo pacman -S xorg-xrandr
xrandr
cd /mnt/data/series/one\ piece/970-âƒ¹¾âƒ¹¾
ls
uname -r
cd /mnt/programmes/Bills/
ls
cd back
ls
find node_modules
ls
node .
ls
node app.js
mysql
node mysql
node app.js
ls
cat db.js
vim db.js
mysqls
mysql
ls
docker container ps
docker container ps -a
mysqlstop
alias | grep mysql
cd /mnt/data/databases
ls
cd mysql
ls
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=true -p 3306:3306 -v /mnt/data/databases/mysql:/var/lib/mysql mysql
docker volume ls 
ls
git status
ls
l
ls
git checkout .
l
cd ../
ls
mysql
ddc
mysql
ddc
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=true -p 3306:3306 -v /mnt/data/databases/mysql:/var/lib/mysql mysql
docker container ls
docker container ps -a
mysqls
mysqlstop
vs some.js
dps
dps -a
dps -a 
docker container ps -a
docker run\
--name mysql\
	- e MYSQL_ALLOW_EMPTY_PASSWORD = yes\
		- p 3306: 3306\
			- v / mnt / data / databases / mysql: /var/lib / mysql\
mysql
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -p 3306: 3306  -v /mnt/data/databases/mysql:/var/lib/mysql mysql
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -p 3306:3306  -v /mnt/data/databases/mysql:/var/lib/mysql mysql
mysqlstop
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -p 3306:3306  -v /mnt/data/databases/mysql:/var/lib/mysql mysql
docker pull mysql
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -p 3306:3306  -v /mnt/data/databases/mysql:/var/lib/mysql mysql
mysqlstop
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -p 3306:3306  -v /mnt/data/databases/mysql:/var/lib/mysql mysql
postgres
docker ps -a
docker container 
docker container stats mysql
docker container logs
docker container logs mysql
mysqlstop
mysql
docker container logs mysql
docker container logs postgres
mongo
mongos
docker ps -a
docker container logs mongodb
docker ps -a
docker container logs mongodb
ls
cd /mnt/data
ls
cd databases
ls
rm -rf *
ls
mkdir mongo mysql postgres
ls
ddc
mongo
mongos
docker container logs mongodb
docker container logs mongo
docker container logs mongodb
docker container logs mongodb | grep fatal
docker container logs mongodb
docker volume ls 
sl
postgres
mysql
docker volume ls
docker ps -a
mysqls
docker exec -it mysql
docker exec -it mysql bash
ps aux
ps aux | docker
ps aux | grep docker
ps aux | grep mysql
mysql
mysqlstop
mongostop
cd dotfiles
ls
cat .zshrc
vim ~/.zshrc
docker volume craete postgres
docker volume create postgres
postgres
docker container logs postgres
ls
alias postgres
dcc
ddc
zsh
alias postgres
postgres
dps
docker volume create mongo 
docker volume create mysql
vim ~/.zshrc
zsh
zrc
postgres & mongo & mysql
dcc
ddc
postgres & mongo & mysql
docker ps -a
ddc
cd /mnt/programmes/Bills
ls
git status
git checkout .
ls
git clean -fd
ls
git status
la
ls
vsc
ls 0a
ls -a
git log
cd back
ls
node app.js
mysqls
mysql
mysqls
sudo pacman -S dbeaver
alias postgres
docker ps -a
postgres
mysql
mysqls
ls
mysql
mysqls
sl
ls
cd /mnt/programmes/node
ls
cd typeorm
ls
cd src
ls
cat index.ts
cd ../
ls
vsc
mysqls
npm start
mongos
mongo
mongos
code ~/.zshrc
mysqls
docker exec -it mysql bash
docker ps -a
npm start
mysqls
npm start
mysqlstop
mysql
npm start
mysqlstop
mysql
npm start
mysqls
npm start
sd stop nginx
npm start
docker ps -a
sd status nginx
systemctl statusnginx
systemctl status nginx
sd start ngixn
sd start nginx
sd stop nginx
sg
sd start nginx
sd status nginx
systemctl status nginx
yay -s robo3t-bin
mongos
docker volume ls
node app.js
npm start
docker exec -it mysql bash
node app.js
npm s
npm start
docker volume
docker volume rm mysql
mysqlstop
docker volume rm mysql
docker volume create mysql
mysql
docker volume ls
npm start
alias mysql
docker run -d --name mysql -e MYSQL_USER=bhumit070 -e MYSQL_PASSWORD=bhumit070 -p 3306:3306 -v mysql:/var/lib/mysql mysql
mysqlstop
docker run -d --name mysql -e MYSQL_USER=bhumit070 -e MYSQL_PASSWORD=bhumit070 -p 3306:3306 -v mysql:/var/lib/mysql mysql
docker volume ps -a
docker container ps -a
npm start
mysqls
docker exec -it mysql bash
npm start
mysqls
docker exec -it mysql bash
npm start
mysqlstop
cd /mnt/programmes/go/yt-hitesh
vs mongoapi
docker volueme ls
docker volume ls
docker volume rm mysql
docker image rm mysql
docker pull mysql
yay -S emoji-keyboard-git
ping google.com
yay -S emoji-keyboard-git
ls
docker volueme ls
docker voluem ls
docker volume ls
docker volume create mysql
docker image ls
docker image rm archlinux
docker image rm ubuntu
ls
mysql
docker container ps -a
mysqlstop
postgresstop
mongostop
vs
npm start
docker ps -a
mysql
npm start
docker exec -it mysql mysql
cd /mnt/programmes/Bills
ls
docker exec -it mysql mysql < bills.sql
docker exec -it mysql bash < bills.sql
docker exec -it mysql mysql < bills.sql
docker exec -it mysql mysql 
docker exec -it mysql bash
tty
docker cp
cd /mnt/programmes/Bills
ls
docker ps -a
docker cp bills.sql mysql:/bills.sql
docker ps -a
mysqls
docker exec -it mysql bash
dps
ddc
yay -S emoji-keyboard-git
cd /home/bhumit070/.cache
ls
cd yay
ls
rm -rf emoji-keyboard-git
sudo pacman -S gnome-shell
gnome-shell-extension-clipboard-indicator
sudo pacman -Sgnome-shell-extension-clipboard-indicator
sudo pacman -S gnome-shell-extension-clipboard-indicator
yay gnome-shell-extension-clipboard-indicator
gnome-extensions
gnome-extensions list
sudo pacman -R gnome-extensions
gnome-extensions list
gnome-extensions
gnome-extensions install
gnome-shell
alias mysql
alias mongo
alias postgres
vim ~/.zshrc
vim ~/.zsh_pro
vim ~/.zsh_profile
vim ~/.zshenv
screenfetch
sudo pacman -S xmonad xmonad-contrib
whereis xmonad
man xmonad
xrandr
mkdir .xmonad
cd .xmonad
ls
xmonad --recompile
vs xmonad.hs
sudo pacman -S xmobar
xmonad --recompile
xmobar
reboot
xrandr
xrandr -s 
xrandr -s  1920x1080
brave
neofetch
sudo pacman -Syu
code
brave
xmonad --recompile
vsc
vs
vs ~/.xmonad/xmonad.hs
sudo pacman -S picom
sudo pacman -S nm-applet
sudo pacman -S volumeicon
yay -S nm-applet
nm-applet
sudo pacman -S network-manager-applet 
xmonad --recompile
logout
lightdm-session-quir
lightdm-session
man lightdm
lightdm -h
man lightdm
dm-tool logout
dm-tool --help
rbt
nitrogen
rb
rbt
nitrogen --restore
cd /mnt/data
ls
cd walls
ls
ulauncher
htop
vim ~/.config/alacritty/alacritty.yml
nitrogen --restore
nitrogen
rbt
ls
light
sudo pacman -S light
man light
light -h
light -L
light -v
cd ~/.xinitrc
cat ~/.xinitrc
echo $usermodmap
xmoadmap
xmodmap
whereis xmodmap
cd /etc/X11/xinit
ls
cd xinitrc.d
cd ../
cat xinitrc
echo $sysmodmap
echo $usermodmap
cd ~/.Xmoadmap
cd ~/.Xmodmap
cat ~/.Xmodmap
cd /etc/X11/xinit
ls
ls -a
cat .Xmoadmap
sudo pacman -S xf86-input-libinput
echo "pointer = 1 2 3 5 4 7 6 8 9 10 11 12" > ~/.Xmodmap && xmodmap ~/.Xmodmap
dm-tool lightdm-session-quit
dm-tool --help
dm-tool switch-to-greeter
rbt
brave
echo "pointer = 1 2 3 5 4 7 6 8 9 10 11 12" > ~/.Xmodmap && xmodmap ~/.Xmodmap
cat ~/.Xmoadmap
xmodmap ~/.Xmoadmap
ks
ls
ls -a
vim .Xmoadmap
cat ~/.Xmoadmap
cat ~/.Xmoadmap > ~/.Xmodmap
cat ~/.Xmodmap
rbt
ls -a
ls
vim .Xmodmap
echo "pointer = 1 2 3 5 4 7 6 8 9 10 11 12"
vim .Xmodmap
rbt
xmodmap ~/.Xmoadmap
xmodmap ~/.Xmodmap
cd /etc/X11/xorg.conf.d
ls
sudo vim 30-touchpad.conf
startx
rbt
cd /etc/X11/xorg.conf.d
ls
cat 30-touchpad.conf
vim 30-touchpad.conf
sudo vim 30-touchpad.conf
rbt
htop
nm-applet
sudo pacman -S pulseaudio
pulseaudio
mkdir ~/.config/pulse
cd ~/.config/pulse
ls
cat cookie
pulseaudio --help
pulseaudio --start
pacman -S alsa-utils\

sudo pacman -S alsa-utils\

alsamixer\

sudo pacman -S volumeicon
volumeicon
volumeicon --help
volumeicon --display
volumeicon --display=1
alsamixer
volumeicon --help
alsamixer
sudo pacman -S pavucontrol
yay -S paman
sudo pacman -S xdotool
ls
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
htop
sudo pacman -S pavucontrol
sudo systemctl enable pulseaudio.socket --now
cd Desktop
ls
vim volume.sh
chmod +x volume.sh
./volume.sh
./volume.sh increase
cd Desktop
./volume.sh increase
cat volume.sh
sudo pacman -S Xbondkeys
sudo pacman -S Xbindkeys
sudo pacman -S xbindkeys
sudo pacman -S pactl
yay -S pactl
pactl
pactl set-sink-volume @DEFAULT_SINK@ +1000
pactl set-sink-volume @DEFAULT_SINK@ -1000
pactl set-sink-volume @DEFAULT_SINK@ +1000
xbindkeya
xbindkeys
vim .xbindkeysrc
sudo pacman -S xbindkeys_config-gtk2
yay -S xbindkeys_config-gtk2
vim .xbindkeysrc
htop
cd /mnt/programmes/go//yt-hitesh
ls
vs mongoapi
acpi
notify-send $(acpi)
notify-send 
man notify-send
notify-send "this is an notification"
yay -S https://aur.archlinux.org/packages/deadd-notification-center/
yay -Sdeadd-notification-center
yay -S deadd-notification-center
vim .xbindkeysrc
volume
volumeicon
notify-send "this is an notification"
vim .xbindkeysrc
go build main.go
./main
mongo
./main
mongos
brave
vim .xbindkeysrc
xbindkeys
vim .xbindkeysrc
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
htop
xmo
xmonad --recompile
rbt
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
vim ~/.xmonad/xmonad.hs
xmonad --recompile
cd .xmonad
ls
code xmonad
code xmonad.
code xmonad.hs
xmonad --recompile
ls
cd .xmonad
ls
xmonad --recompile
time
ls
cp xmonad.hs xmonad-bhumit070.hs
xmonad --recompile
cd .xmonad
code xmonad.hs
xmonad --recompile
xmobar
sudo pacman -S xmobar
xmobar
sudo systemctl disable lightd
sudo systemctl disable lightdm
rbt
power
htop
pod
pof
vim ~/.xmonad/xmonad.hs
iwctl
vim ~/.xmonad/xmonad.hs
sudo pacman -S lxsession
sudo pacman -S wifi-menu
settings
sd status NetworkManager
nmcli
nmcli c
nmcli d wifi list
nmcli c
nmcli d connect bhumit
nmcli d connect wlan0
nmcli d connect wlp2s0
nmcli d connect wlp2s0 bhunit
nmcli d connect wlp2s0 bhumit
nmcli d connect wlp2s0
nmcli d
nmcli device connect
nmcli device connect wlp2s0
nmcli device connect wlp2s0 bhumit
nmcli device connect wlp2s0
nmcli device connect wlp2s0 'bhumit'
nmcli device connect wlp2s0 --wireless 'bhumit'
nmtui
nm-applet
xmobar
nm-apple
nm-applet
man nm-applet
nm-connection-editor
rbt
nmcli nm wifi on
nmcli radio wifi on
man nmcli
vim ~/.xmonad/xmonad.hs
vs ~/.xmonad/xmonad.hs
xmonad --recompile
yad
Yad
xmonad --recompile
rbt
sudo apt-get remove gnome
sudo apt-get remove gnome-session
sudo pacman -S gnome
gnome-boxes
ls
alsamixer
vim .xbindkeysrc
pactl
alsamixer
pulseaudio --start
pulseaudio
alsamixer
sd status pulseaudio
systemctl --system enable --now pulseaudio.service\

sudo pacman -S pulseaudio
sudo systemctl status pulseaudio
pulseaudio
man pulseaudio 
pulseaudio --help
pulseaudio --system=true
sudo pulseaudio --system=true
pavucontrol
man pavucontrol
pavucontrol --help
pavucontrol --help-all
pavucontrol --help
vim .xbindkeys
ls -a
vim .xbindkeysrc
pactl
vim .xbindkeysrc
pactl set-sink-mute @DEFAULT_SINK@ toggle
sudo systemctl status pulseaudio
vim .xbindkeysrc
vim ~/.xmonad/xmonad.hs
lxsession
rbt
pulseaudio --daemonize=no --system --realtime --log-target=journal
vim ~/.config/alacritty/alacritty.yml
sl
ls
xrandr
ls
cat mpv-shot0001.jpg
thunar
cmatrix -s
cmatrix
ls
lsblk
sl
lolcat
sudo pacman -S lolcat
lolcat
lolcat .
lolcat ls
ls | lolcat
ls | lolcat -a
sudo pacman -S cowsay
cowsay
cowsay "Bhoomit"
man cowsay
cowsay -e "EYE"
cowsay -e "EYE" "ok"
cowsay -e "ðƒ¿ƒ¸ƒ­ðƒ¿ƒ¸ƒ­" "ok"
htop
xombar
xmobar
man xmobar
xmobar --help
xmobar -d
dmenu_run -v
man dmenu
dmenu_run -i -l
dmenu_run -i
dmenu_run -l -i
picom
man picom
cd /mnt/programmes/react
ls
npx create-react-app toast-global
ls
cd toast-global
vsc
yarn serve
yarn star
yarn start
yarn add react-toastify
htop
ls
sl
man sl
man ls
dmenu_run -l -i
cmatrix
pod
pof
rbt
htop
ls
sl
pacman -Q alacritty
pacman -Q windows
cd /mnt/programmes/go/yt-hitesh
ls
mkdir go-routines
vs go-routines
touch main.go
time touch main.js
time (touch main.js)
rm -rf main.
rm -rf main.js
go run main.go
sudo pacman -S qbittorrent
go run main.go
ping google.com
go run main.go
cat .xmonad
cd .xmonad
ls
cat xmonad.h
cat xmonad.hs
htop
ping google.com
ls
cp xmonad-bhumit070.hs ~/dotfiles
cp xmonad.hs ~/dotfiles
ls
cd ~/dotfiles
ls
git status
git add .
git commit -m "Added xmonad configs"
git push 
dmenu_run -l -i
dmenu_run -q
dmenu_run -h
dmenu_run -m
dmenu_run --auto-repair
ls .zsh*
cp .zsh* ~/dotfiles
echo $HISTFILE                                                                                                                                                                                                  
echo $HISTFILE                                                                                                                                                                                                  
echo $HISTFILE                                                                                                                                                                                
echo $SAVEHIST
vim .zshrc
ls -la
git status
ls -la
ls -la
echo $SAVEHIST
docker container start mysqls
docker container start mysql
mysqls
echo $SAVEHIST
cd ~/dotfiles
ls
cat .zshrc
ls
git status
cat .zsh_history
redis-cli
ps aux
ps aux | grep spotify
redis-cli
ping -c 10 google.com
time nmcli c up 'iPhone 12'
time nmcli c up 'iPhone 12'
time nmcli c up 'iPhone 12'
pof
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
node single-server.js
node single-server.js
node single-server.js
nodemon server.js
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
docker container start mysql
sudo pacman -Syuu
git add .
git commit -m "add / edit rate limit in db and save in redis"
git push origin rate-limits
pof
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
docker container start mysql
dps
mysqls
cd /mnt/data
ls
cd asana
ls
vs StakeCube-Backend
mysql
mysqls
mysqls
npm run dev
npm run dev
npm run dev
npm run dev
git commit -m "added global limit model and updated rate limiter model"
git log
git commit -m "updated data access layer files"
git commit -m "updated ip rate limit middleware & added global rate limit middleware"
git commit -m "updated ip limiter controller file and updated global rate limiter controller file"
git commit -m "service file for global limits"
git commit -m "added global limit routes , register global routes in app"
git add .
git commit -m "added more constant variables"
git commit --amend --no-edit
git push origin rate-limits
git push origin rate-limits
git remote -v
npm run dev
npm run dev
pof
ping -c 10 google.com
nmcli c up 'iPhone 12'
nmcli c up 'iPhone 12'
ping -c 10 google.com
ls
ls
cd /mnt/programmes
sl
ls
ls
ls
ls
codium
ls -la
redis-cli
ls -la
cat package.json
ls -la
cat package.json
cat package.json
neofetch
ls -la
cat .xinitrc
ls -la
cat .profile
cat .gtkrc-2.0
ls -la
cat .vuerc
cat .xsession-errors
ls
cat .node_repl_history
cat .rediscli_history
ls 
cd .gnupg
cal
calc
node
node
htop
git checkout .
git clean -fd
git status
npm run dev
docker container start mysql
npm run dev
npm run dev
npm run dev
touch x.js
node x.js
node x.js
node x.js
node x.js
node x.js
node x.js
pof
rbt
nmcli c ip 'bhumit'
nmcli c up 'bhumit'
docker container start mysql
git add .
git commit -m "folder structure"
onfr
node
mysqls
mysqls
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
ping -c 10 google.com
docker container start mysql
redis-cli -h 127.0.0.1 -p 6379 
nmcli c up 'bhumit'
nmcli c up 'iPhone 12'
nmcli c up 'iPhone 12'
git commit -m "fetch headers for database"
mysqls
mysql
mysqls
git commit -m "Added method in rate limit model"
git log
git commit --amend --no-edit
git commit --amend
git commit --amend --no-edit
git commit --amend --no-edit
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
cd /mnt/programmes
ls
cd ../data
ls
cd asana
ls
code StakeCube-Backend
htop
npm run dev
cd /mnt/programmes
ls
cd node
mkdir params
cd params
ls
npm init -y
ls
yarn add express
ls
codium .
npm i -g nodemon
dps
npm run dev
node server.js
fuser -k 5000/tcp
node server.js
node server.js
git commit -m "added route,method,paramCount"
git add .
git commit --amend --no-edit
git status
git push origin rate-limits
git remote -v
git commit -m 
git commit -m
git commit 
git push origin rate-limits
Bollywood is no longer the king of Indian Cinema âƒ¸ƒ€\

fuser -k 3001/tcp
npm run dev
touch server.js
nodemon server.js
nodemon server.js
rbt
npm run dev
fuser -k 3001/tcp
npm run dev
fuser -k 3001/tcp
npm run dev
fuser -k 3001/tcp
npm run dev
fuser -k 3001/tcp
sudo fuser -k 3001/tcp
npm run dev
fuser -k 3001/tcp
npm run dev
fuser -k 3001/tcp
npm run dev
npm run dev
fuser -k 3001/tcp
npm run dev
fuser -k 3001/tcp
npm run dev
fuser -k 3001/tcp
npm run dev
fuser -k 3001/tcp
npm run dev
fuser -k 3001/tcp
npm run dev
fuser -k 3001/tcp
npm run dev
fuser -k 3001/tcp
npm run dev
fuser -k 3001/tcp
npm run dev
fuser -k 3001/tcp
npm run dev
npm run dev
npm run dev
nodemon server.js
cat ~/.cache/sessions
cd ~/.cache/sessions
ls
echo $SAVEHIST
rbt
rbt
pof
cd ~/.cache/sessions
ls
rm -rf *
rbt
nmcli show profiles
nmcli show profiles
nmcli show profiles
git status
alias mysql
alias mysqla
alias mysqls
docker volume ls
git status
zsh
zsh
npm run dev
npm run dev
nodemon server.js
nodemon server.js
mysqlstart
alias | grep mysql
code ~/dotfiles
git add .
git commit -m "docker function added "
git lgo
git log
cp .zshrc ~/dotfiles
cp .zshrc ~/dotfiles/.zshrc
cp ~/.zshrc ~/dotfiles/.zshrc
nmcli c ip 'Redmi note 5 pro'
nmcli c up 'Redmi note 5 pro'
nmcli c
nmcli c up 'bhumit'
dps
dstart mysql
nodemon server.js
git commit -m "updated rate limiter mdoel"
git commit -m "added block ip time as constatn and removed global ip middleware & removed params count from cutome limit key getter function"
git commit -m "updated controller to find existing route by route & method"
git commit -m "added ip rate limit middleware"
git commit -m "added ip rate limit before every route"
git add .
git commit -m "added ip rate limit before every route"
git log
git commit --amend --no-edit
git add .
git status
git add .
git commit 
git push origin rate-limits
git log
git remote -v
git remote remove origin
git remote -v
git remote origin add https://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@github.com/kavinsharma/stake-cube-backend
git remote add origin https://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@github.com/kavinsharma/stake-cube-backend
git remote -v
git pull
opera
git shortlog -s
cd /mnt/programmes
sl
ls
cd tailwind
ls
ping -c 10 google.com
flutter
sudo pacman -S flutter
paru -S flutter
paru -S flutter
ping -c 10 google.com
ping -c 1000 google.com & echo "done"
git commit -m "added more comments and error code for 404"
git push origin rate-limits
git commit -m 
git commit 
git log --oneline
git status
git push 
git push origin rate-limits
cd /mnt/programmes
ls
cd node
ls
mkdir pub-private
cd pub-private
ls
codium 
yarn init -y
touch index.js
cd /mnt/programmes/node/pub-private
touch i
touch index.js
codium  .
ld
ls
du -h Videos
ls -la
du -h .vim
ls -la
du -h Postman
cd /mnt/data
ls
du -h .
git log
git status
git status origin master
npm run dev
fuser -k 3001/tcp
npm run dev
fuser -k 3001/tcp
nodemon server.js
nodemon single-server.js
fuser -k 3001/tcp
nodemon single-server.js
fuser -k 3001/tcp
nodemon single-server.js
rm -rf i
node .
node .
npm run dev
npm run dev
npm run dev
npm run dev
paru -S flutter
flutter sdk
flutter
sudo chmod 777 /opt/flutter/bin/cache
sudo chmod 777 /opt/flutter/bin/cache
flutter
 sudo chown -R $USER /opt/flutter
flutter
pof
pof
flutter doctor
flutter doctor
ping -c 10
ping -c 10 google.com
paru -S android-studio
paru -S android-studio
paru -S android-studio
java -version
whereis java
java -version
sudo pacman -Ss
sudo pacman -Ss | grep java
flutter
flutter doctor
flutter config --android-sdk
flutter -h
flutter doctor
flutter doctor
flutter doctor --android-licenses
java
java --version
java -v
java
whereis java
sudo pacman -R java
pacman -!
pacman -Q
pacman -Q | grep java
pacman -Q | grep jdk
sudo pacman -R jdk-openjdk
sudo pacman -R jdk8-openjdk
sudo pacman -Rf jdk8-openjdk
sudo pacman -R jdk8-openjdk
sudo pacman -Rdd jdk8-openjdk
sudo pacman -S jaav
sudo pacman -S jaa
sudo pacman -S java
paru -S java
paru -S java8
paru -S jdk
sudo pacman -sS java | grep jre
sudo pacman -S jre-openjdk
flutter doctor --android-licenses
flutter doctor
flutter /home/bhumit070/Android/Sdk --install "cmdline-tools;latest"
$HOME/Android/Sdk --install "cmdline-tools;latest"
cmdline-tools
flutter doctor
flutter doctor --android-licenses
flutter doctor 
cd /mnt/programmes
ls
ls
cd flutter
mkdir flutter
cd flutter
ls
flutter run
flutter run
flutter run
flutter -h
flutter format
paru -S drawio-desktop
ls
ls
cd /mnt/data/series
ls
cd ../seriesss
ls
cd anime/series/one\ piece
ls
cd 970-âƒ¹¾âƒ¹¾
l
ls
cd Documents
ls
ls 
ls
cd Documents
ls -la
thunar .
ls -la
code index.js
rm -rf index.js
vimtutor
sudo pacman -S vimtutor
vimtutor
paru -S vimtutor
/usr/bin/vim
sudo pacman -S vim
vimtutor
vimtutor
vim ~/.config/nvim/init.vim
vim .
vim
vim
cat ~/.config/nvim/init.vim
cd ~/.config/nvim
sl
cp init.vim bhumit070-init.vim
ls
vim init.vim n
nvim
nvim
nvim
python3
htop
cd ~/.config/nvim
ls
vim init.vim
vim init.vim
cd /mnt/programmes
ls
cd expense-tracker
ls
cd expense-tracker-frontend
ls
nvim .
ls
nvim .
ls
vim package.json
vim package.json
ls
ping google.com
paru -S ðƒ¿ƒ¸ƒ°
paru -S otf-operator-mono
paru -S otf-operator-mono
cd /usr/share/fonts
ls
ls
cd opentype
cd ~/.fonts
sudo mkdir opentype
ls
cd opentype
sl
ls
sudo cp ~/Desktop/OperatorMono-Bold.otf /usr/share/fonts/opentype/
ls
cd expense-tracker-frontend
while true \
do\
ping -c google.com\
sleep 2s\
done
while true \
do\
ping google.com\
sleep 2s\
done
while true \
do\
ping google.com\
sleep 2s\
done
ls
while true \
do\
echo time\
sleep 2s\
done
sudo fc-cache -f -v
cd /usr/share/fonts
ls
rm -rf opentype
sudo rm -rf opentype
sudo fc-cache -f -v
sudo fc-cache -f -v
touch x.css
code x.css
codium .
codium x.css
cd /mnt/programmes/flutter
ls
code first_demo
brave
vim ~/.zshrc
flutter run ios
flutter run web
flutter run
flutter devices
flutter run -d chrome
flutter build web
flutter doctor
paru -S otf-operator-mono
cd Desktop
git clone https://github.com/kiliman/operator-mono-lig.git
ls
ls
cd operator-mono-lig
ls
./build.sh
ls
vsc
go
go
go
./build.sh
cd Downloads
ls
sudo cp FontsFree-Net-OperatorMono-Book.ttf /usr/share/fonts
fc-cache -f -v 
sudo paru -S otf-operator-mono
paru -S otf-operator-mono
pip install fonttools
paru -S otf-operator-mono
paru -S otf-operator-mono
pip3 install fonttools
paru -S otf-operator-mono
flutter run -d chrome
flutter run -d chrome
pof
dstart mysql
dps
git commit -m "Added api to fetch limits by category"
git reset --soft HEAD~1
git stash list
git stash apply 0
git status
npm run dev
npm run dev
git stash list
git pull
git pull origin rate-li
git pull origin rate-limits
npm run dev
rm -rf node_modules
npm i
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
ls
nodemon single-server.js
node single-server.js
node single-server.js
node single-server.js
npm run dev
pkill -f node
node -v
nvm
ping 173.249.0.173
redis-cli -h 173.212.192.114
git add .
git commit
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
git stash list
git stash apply 1
git add .
git commit
git push origin rate-limits
pof
docker container start mysql
git stash list
git stash apply 0
git commit -m "updated swagger docs for rate limtis"
git push origin rate-limits
npm run dev
npm run dev
ls -l
alias | grep mysql
alias | grep mysql
node -v
cd /mnt/programmes
ls
mkdir nextjs
npx create-next-app superheros
ls
ls
cd n
cd nextjs
ls
npx create-next-app superheros
vs superheros
yarn dev
ping -c 10 google.com
paru -S desltime-linux
paru -S desktime-linux
brave
paru -S desktime
cd /mnt/data
cd office-woek
mv /mnt/data/office-woek /mnt/data/office-work
cd ../
ls
cd office-work
sl
thunar
ping -c 10 google.com
git pull origin rate-limits
git pull origin rate-limits
npm run dev
sudo pacman -S dbeaver
git commit -m "updated code base and split docs into admin & non-admin section"
git log
git push origin rate-limits
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
cd /mnt/data/office-work
ls
git clone https://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@github.com/fablemaze/storytech.git
mv storytech storytech1
git clone https://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@github.com/fablemaze/storytech.git
ls
vs storytech
git remote -v
git remote -v
cd /mnt/data/office-work
ls
vs storytech
code ../storytech1
pof
rbt
desktime-linux
desktime-linux
desktime-linux
desktime-linux --help
desktime-linux -d
desktime-linux -v
htop
ps aux
ps aux | grep desktime
desktime-linux --login
flatpak
paru -Q desktime
paru -R desktime
ls
chmod +x DeskTime.AppImage
./DeskTime.AppImage
./DeskTime.AppImage
htop
ps aux | grep desktime
rbt
cd Downloads
ps aux | grep desktime
pkill desktime
ps aux | grep desktime
pkill -f desktime
pkill -f 6496
alias pkill
dpkg
sudo pacman -S dpkg
cd Downloads
ls
dpkg -i DeskTime-6.0.0-alpha.34.deb
sudo dpkg -i DeskTime-6.0.0-alpha.34.deb
sudo pacman -S libgtk
sudo pacman -S libgtk-3-0
ls
ls
ls
cd ../
ls
ls
cd storytech1
ls
cp -r .git ../storytech
git remote -v
ls
cd ../
ls
rm -rf *
ls
mv storytech storytech2
git clone https://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@github.com/fablemaze/storytech.git
ls
cd /mnt/data/office-work
ls
cd storytech
cd ../storytech1
ls
cd frontend
ls
cat .env
/usr/bin/cat .env
git branch
git branch -a
git checkout bhoomil_playBtn
git branch -a
git branch -a
git checkout bhoomil_footnote-image-resolution
git branch -a
git config --list
paru -S sublimt
paru -S sublime
node
mpv
sudo pacman -S mpv
mpv
mpv
mpv
sudo pacman -S vlc
ls
mpv Screen\ Recording\ 2022-01-04\ at\ 20.29.34.mov
sudo pacman -S epiphanu
sudo pacman -S epiphany
sudo pacman -R dpkg
sudo pacman -R dpkg
dpjg
dpjg
dpkg
epiphany
cd /usr/lib/libwebkit2gtk-4.1.so
cat /usr/lib/libwebkit2gtk-4.1.so.0
ls
epiphany -d
epiphany -f
epiphany
epiphany
epiphany
sudo pacman -Syu
ping -c 10 google.com
cd frontend
yarn dev
ping -c 10 google.com
cd frontend
yarn dev
sudo pacman -S gPhoto
sudo paru -S gPhoto
ls
cal
cal 2
cal 2022
cal 2021
cal 2022
vim
cp slips.txt ~/Desktop
nmcli c up 'kashmira'
nmcli c up 'kashmira'
nmcli c up 'kashmira'
nmcli c
nmcli c up 'kashmira ganatra'
rbt
npm run dev
npm run dev
npm run dev
dpkg
sudo pacman -Q dpkg
ls -la
cd dotfiles
l
ls
git status
cat .zsh
cat .zshrc
cat .zshrc
ls
ls
ls dotfiles
ls
cd dotfiles
dpkg
node
ping -c 10 google.com
docker container start mysql
docker container start mysql
redis-cli
systemctl stop redis
systemctl status redis
systemctl status redis
redis-cli
git pull origin rate-limits
systemctl status redis
l
redis-cli
git commit -m "ip rate limiter code updated"
git add .
git commit -m "ip rate limiter code updated"
systemctl status redis
systemctl enable redis
systemctl start redis
systemctl status redis
git commit -m "updated code for global limits"
git log
git push origin rate-limits
git log
ssh root@173.249.22.127
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
po
pof
ping -c 10 google.com
ping -c 10 google.com
mpv
mpv
sudo pacman -Q mpv
mpv
mpv
sudo pacman -R mpv
sudo pacman _S mpv
sudo pacman -S mpv
mpv
ls
ping -c 10 google.com
ping -c 10 google.com
pof
pof
ping -c 10 google.com
cd ~/.config
cd u
cd ulauncher
ls
mkdir user-themes
git clone https://github.com/S-ci/ReMatch-Dark-Blue-Ulauncher.git
cd Downloads
ls
cp ReMatch-Dark-Blue-Ulauncher-main.zip ~/.config/ulauncher/user-themes
cd ~/.config/ulauncher/user-themes
ls
unzip ReMatch-Dark-Blue-Ulauncher-main.zip
l
ls
ls
alias vs
alias vsc
alias code
alias vs
code ReMatch-Dark-Blue-Ulauncher-main ; exit
cd /mnt/programmes
sl
cd node
ls
mkdir fork-test
cd fork-test
vsc
yarn init -y
touch index.js
touch cmd.js
node .
node .
node .
node .
node .
node .
node .
node .
node .
node .
node .
node .
node .
pov
pof
pof
vim ~/.xinitrc
systemctl disable lightxm
systemctl disable lightdm
rbt
lal
la
ls
git status
ls
ping -c 10 google.com
ping -c 10 google.com
codium
ls -la
cat x.css
rm x.css
ls
ls
ls-la
sudo pacman -S seahorse
pof
cd /mnt/programmes
ls
cd /mnt/programmes
ls
cd vue
sl
ls
vue create image-loading
npm i -G vue
npm i -G @vue/cli
vue
cd /mnt/programmes/vue
vue create image-loading
vue create image-loading
vue create image-loading
pm2
pm2
npm i -g pm2
pm2
pm2 ls
vue --version
ls
vite
@vue
vue
npm i -g vite
yarn global add @vue/cli\

vue --version
vue
cd /mnt/programmes/vue
ls
rm -rf package-lock.json
npx vue create image-loading
ls
alias vs
vs
cd /mnt/programmes/vue
ls
vs image-loading
cd
cd Desktop
ls
cp big-p.jpg /mnt/programmes/vue/image-loading/src
yarn serve
ls -la
pm2 ls
sudo pacman -Syu
mpv
sudo pacman -R mpv
mpv
mpv
sudo pacman -S mpv
mpv .
mpv .
sudo pacman -R mpv
paru -S mpv
mpv
sudo pacman -R mpv
lsblk
whereis tree
pof
ls -la
exa
exa
exa -la
ls
ls
exa
alias ls
ls
function vs
type vs
which vs
ls
ls -la
ls -lah
ls -lah
adb
adb devices
pof
pof
paru -S clipit
sudo pacman -S clipman
ping -c 10 google.com
ping -c 100 google.com
ping -c 100 google.com
ping -c 100 google.com
sudo pacman -Syuu
sudo pacman -Syuu
paru
ls	
paru
cal
cal 2
cal 2022
cal 2022 2
cal 2022
cal 2022
cal 2022
cal 2022
docker container start mysql
mysql
mysqlstart
sudo pacman -Syuu
cd /mnt/programmes/node
mkdir joid
cd joid
l
yarn init -y
sl
vsc
touch index.js
yarn add joi
node index.js
node index.js
node index.js
node .
node .
ls
ls
pof
rbt
emote
paru -R emote
emote
paru -S emote
mov
mpv
sudo pacman -S mpv
mpv
mpv
mpv .
emote
emote
emote
paru
sudo pacman -Syuu
time zsh
ping -c 100 google.com
emote
emote
cd /mnt/programmes
ls
cd /mnt/data
cd /mnt/data/seriesss
ls
cd anime/series/one\ piece
ls
ls
cd 970-âƒ¹¾âƒ¹¾
ls
emote
emote --help
paru -R emote
emote
whereis emote
which emote
sudo apt install xdotool libgtk-3-dev libgirepository1.0-dev python3-venv gir1.2-keybinder-3.0 libkeybinder-dev\

python
python --version
python
 git clone https://github.com/pyenv/pyenv.git ~/.pyenv
vim ~/.zshrc
pipenv
sudo pacman -S python-gobject gtk3
sudo pacman -S python cairo pkgconf gobject-introspection gtk3
ls
make install
make install
make install
pipenv run
ls
vsc
cd Desktop
git clone https://github.com/tom-james-watson/Emote.git
ls
cd emo
cd Emote
ls
make install
make install
make install
python3.8
make install
zsh
emote
paru -S emote
emote
paru -R emote
emote
ping
ping localhost
opera
docker container start mysql
dps
dps
ddi
alias ddi
docker image ls
docker volume ls
docker volume create mongo 
docker volume create postgres
mongo
cd /mnt/data
ls
rm -rf office-work
ls
cd offi
ls
cd Music
ls
l
ls
zsh -i -c
zsh -i -c exit
time zsh -i -c exit
time zsh -i -c exit
time zsh -i -c exit
time zsh -i -c exit
time zsh -i -c exit
time zsh -i -c exit
zsh -i
seq 10
for i in seq 10\
echo $i
for i in $(seq 10)\
echo $i
for i in ls\
echo $i
for i in $(ls)\
echo $i
for i in $(/usr/bin/ls)\
echo $i
cd /mnt/programmes
python3 -m pip install --user --upgrade pynvim\
\

dmenu_run
dmenu_run
dmenu
dmenu_run
vim
vim
vim ~/.zshrc
dmenu
dmenu_run
dmenu_run
dmenu_run
vim ~/.zshrc
sudo locale-gen "en_US.UTF-8"\

noed
node
node
 pip3 install bs4 --user
pip3 install bs4 --user
cal
cal +2
man cal
cal --1
cal -1
cal -2
cal --2
man cal
cal -n 2
sudo dmidecode
sudo dmidecode | grep lenovo
sudo dmidecode | grep Version | sed -n '2p'\
\

cal
cal -n 12
cal -n 12
cal -n 12
cal -n 12
cal -n 12
cal -n 12
cal -n 12
cal -n 12
cal -n 12
ping -c 100 google.com
cd /mnt/data/flutter
mkdir /mnt/data/flutter
cd /mnt/data/flutter
ls
which flutter
whereis flutter
pof
cd /mnt/programmes/vue
ls
npm init vue
cd vue-project
ls
vsc
yarn && yarn serve
yarn dev
paru
htop
ping -c 100 google.com
yarn dev
paru -S emote
paru -S flatpak
emote
paru -R emote
emote
 sudo pacman -S flatpak
flatpak
flatpak --help
flatpak --help
flatpak install emoe
flatpak search emote
flatpak install emote
emote
emote
/usr/bin/emote
paru -S bemoji
bemoji
bemoji
bemoji --help
bemoji e
bemoji e
paru -S emoji-cli-git
emoji-cli
emoji-cli-git
whereis emoji-cli-git
cd /mnt/programmes/flutter
ls
flutter create tic-tac-toe
flutter create tictactoe
cd tictactoe
ls
vsc
adb devices
flutter run
flutter run android
flutter run --help
flutter run 
flutter run
flutter run
flutter run
ping -c 100 google.com
cd /usr/share/fonts/misc
sl
pacman -Qs -- -fonts-\

pacman -Qs -- -fonts-
emote
paru -S emote
paru -S emote -f
echo $srcdir
emote
paru -R emote
/usr/bin/emo
whereis paru
which paru
cd ~/.config/
ls
cat Qtpro
cd 
cd Desktop
git clone https://aur.archlinux.org/emote.git
ls
cd emote
ls
makepkg 
makepkg --help
makepkg -Csi
makepkg -siC
sudo pacman -S noto-fonts-emoji
cd /mnt/programmes
ls
cd node
sl
ls
mkdir fork-test
vs fork-test
yarn add express
nodemon index.js
nodemon index.js
nodemon index.js
nodemon index.js
nodemon index.js
nodemon index.js
nodemon index.js
lsblk
cd /mnt/programmes
cd tailwind
ls
mkdir fb-clone
vs fb-clone
touch index.html
touch index.css
sxiv fb_logo.svg
yarn init -y
npm install -D tailwindcss postcss autoprefixer\
npx tailwindcss init
npx tailwindcss init =p
npx tailwindcss init -p
yarn add vite
yarn add vite
yarn dev
yarn dev
pof
ls
l
sl
cd /mnt/programmes/node
ls
ls
cd joid
ls
vsc
cal
cal -n 12
cal -n 12
ls
ls -lah
cat package
cat package.json
cat package.json
ls -lag
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
node index.js
poc
pof
neofetch
neofetch
ls -lah
cat package.json
cat package-lock.json
pof
cd /mnt/programmes/
mkdir nextjs
cd nextjs
ls
rm -rf superheros
npx create-next-app superheros
cd superheros
vsc
mkdir models
touch models/SuperHero.js
yarn add mongoose
mogno
mongo
docker container start mogno
docker container start mongo
alias mongo
docker container start mongodb
dps
mkdir db
ks
touch db/db-connect.js
defaults delete -g ApplePressAndHoldEnabled
cal -n 12
pof
yarn dev
yarn dev
yarn dev
yarn dev
docker container start mongodb
robo3t
mongos
nmcli c up 'iPhone 12'
yarn dev
yarn dev
ping -c 10 google.com
ping -c 10 google.com
opera
pof
neofetch
neofetch
neofetch
neofetch
neofetch
neofetch
neofetch
cmatrix
sudo pacman -S cmatrox
sudo pacman -S cmatroc
sudo pacman -S cmatric
sudo pacman -S cmatrix
cmatrix
cmatrix
cmatrix
pof
ping -c 10 google.com
pof
ls -la
ls
pof
ls -la
ls -la
cat slips.txt
cat slips.txt
cat slips.txt | echo "ko"
docker container start mongodb
docker container stop mongodb
lock
lock
pof
nmcli c up 'iPhone 12'
bash
cd /mnt/programmes
ls
cd node
ls
mkdir sequelize-typescritp
cd sequelize-typescritp
ls
cd ../
rm -rf sequelize-typescritp
mkdir mongoose-type
cd mongoose-type
vsc
touch tsconfig.json
yarn init -y
yarn add express mongoose
alias yd
yd typescript
npm install --save-dev eslint
yd eslint
npx eslint --init
npm run lint -- --fix\

npx eslint --fix
redis-cli
cd /mnt/programmes
ls
mkdir hospitals
cd hospitals
ls
npm install --save-dev ts-node nodemon
yd @types/express@4.17.1
mkdir src
touch src/app.ts
npx tsc
node dist/app.js
cd /mnt/pro
cd /mnt/programmes/hospitals
sl
npm init nuxt
ls
ls
npm init nuxt
ls
npm init nuxt-app hospitals
vs hospitals
git config --list
git commit -m "init"
git add .
git commit -m "init"
nd
alias nd
alias
alias | grep npm
npm run dev
alacritty --workingDir .
alacritty --working-directory .
cd ../
rm -rf hospitals
cd /mnt/programmes/hospitals
ls
npm init nuxt-app hospitals
ls
rm -rf hospitals
npm init nuxt-app hospitals
vs hospitals
mkdir layouts
ping www.epfinfia.gov.in
ping epfinfia.gov.in
ping epfinfia.gov.in
ping epfinfia.gov.in
ping epfinfia.gov
ping epfindia.gov
ping epfindia.gov.in
git add .
git commit -m "init"
npm run dev
npm run dev
npm run dev
fuser -k 3000/tcp
sudo fuser -k 3000/tcp
npm run dev
npm run dev
pof
cd /mnt/programmes/hospitals
cd ../
ls
cd vue
ls
code image-loading
ping 
ping epfindia.gov.in
cd /usr/share/code
cat /usr/share/code
cat /usr/share/code
whereis code
cat /usr/share/man/man/code.n.gz
cat /usr/share/man/man/code.n.gz
whereis code
cd /opt/visual-studio-code/bin/code
sudo chown -R ${whoami} /opt/visual-studio-code/bin/cod
sudo chown -R ${whoami} /opt/visual-studio-code/bin/code
sudo chown -R ${whoami} /opt/visual-studio-code/bin/code/
sudo chown -R ${whoami} /opt/visual-studio-code/bin/code\

sudo chown -R "${whoami}" /opt/visual-studio-code/bin/code\

sudo code
sudo code --user-data-dir /home/bhumit070/Desktop
sudo code --user-data-dir /home/bhumit070/Desktop
who code
which code
whereis code
dash
cd Desktop
ls
sxiv code.png
pof
cd /mnt/data/seriesss
ls
cd anime/series/one\ piece
ls
cd 970-âƒ¹¾âƒ¹¾
s
ls
nmcli c up 'Redmi Note 8'
ping google.com
ping google.com
ping google.com
node
cd /mnt/programmes/hospitals
npm init nuxt-app hospitals
ls
rm -rf hospitals
ls
rm -rf hospitals
ls
npm init nuxt-app hospitals
ping -c 10 google.com
ping telegram
pamac
pamac remove --no-save tlp
pamac remove --no-save tlp
bluetooth
sudo pacman -S blueman
blueman
blueman
bluetooth
blueman-applet
systemctl status bluetooth
bluetooth
file /etc/systemd/system/pulseaudio.service\

file /etc/systemd/system/pulseaudio.service
pacman -Qo /usr/lib/systemd/system/pulseaudio.service
sudo systemctl restart bluetooth\

blueman
blueman-applet
bluetoothctl
blueman-applet
systemctl status bluetooth
systemctl status bluetooth
blueman
hcitool de
hcitool dev
sudo pacman -S hcitool
bluetoothctl
bluetoothctl
blueman-applet
rbt
bluetoothctl
telegram
cd Do
cd Downloads
dash
bash .
bash $(pwd)
bash
ls
cd Telegram\ Desktop
ls
mpv .
mpv .
mpv \[S-1\]\ \[Ep-06\]\ Love\ and\ Lies\(Anime\ Clan\).mkv
ping telegram
ping telegram.org
nvm
ls
nvm use 
node -v
nvm use 14
npm -v
cd Desktop
wget https://www2.kickassanime.ro/anime/koi-to-uso-love-and-lies-632646/episode-06-856969
ls
s
cd Desktop
ls
cat episode-06-856969
nmcli c up 'Redmi Note 8'
ping -c 10 google.com
$WORKSPACE_NUM
$"WORKSPACE_NUM"
echo "$WORKSPACE_NUM"
echo "$WORKSPACE_NUM"
$(wmctrl -d | grep \* | cut -d' ' -f1)
echo $(wmctrl -d | grep \* | cut -d' ' -f1)
echo $(wmctrl -d | grep \* | cut -d' ' -f1)
echo $(wmctrl -d | grep \* | cut -d' ' -f1)
echo $(wmctrl -d | grep \* | cut -d' ' -f1)
wmctrl
wmctrl -d
wmctrl -d | cut -d' ' -f1
wmctrl -d | grep \* | cut -d' ' -f1
wmctrl -d | grep \* | cut -d' ' -f1
pof
nmcli c up 'Redmi Note 8'
nmcli c up 'Redmi Note 8'
nmcli c up 'iPhone 12'
cd /mnt/programmes
ls
cd hospitals
l
ls
vs hospitals
git commit -m "init"
git remote -v
git add .
git commit --amend --no-edit
lsb_release
lsb_release -a
uname
uname =t
uname -r
sudo pacman -S virtualbox
sudo pacman -S virtualbox
sudo pacman -S virtualbox
cal
vue 
vue --version
npm i -g @vue/cli
vue
vue --version
vue info
vue migeate
vue migrate
ls
cd /mnt/programmes/hospitals/hospitals/o
cd /mnt/programmes/hospitals/hospitals/
ls
vue
vue config
vue init 
vue
vue info
vue ui
npm run dev
npm run dev
pof
cal
cal -n 2
ping -c 10 google.com
pof
ping -c 10 google.com
pof
rbt
pof
rbt
ping -c 10 google.com
ping -c 10 google.com
cd /mnt/programmes
ls
sudo pacman -Syuu
sudo pacman -Syuu
paru
paru
paru
pof
nmcli c up 'iPhone 12'
nmcli c up 'iPhone 12'
nmcli c up 'iPhone 12'
nmcli c up 'iPhone 12'
adb devices
adb devices
adb devices
adb devices
adb devices
adb devices
adb devices
adb devices
npm i -g vorlon\

M
M
M
npm i -g vorlon
verlon
vorlon
ls -la
ping footy.eu
npm install -g weinre
weinre --boundHost -all-\

php -i | grep php.ini
php
ping api.footy.eu
ping api.footy.eu
cd /mnt/programmes
ls
ls
mkdir prisma
cd prisma
curl -L https://pris.ly/quickstart | tar -xz --strip=2 quickstart-main/typescript/starter
ls
cd starter
ls
vsc
mpv
npm i
npm run dev
npm run dev
cd /mnt/programmes/prisma
ls
npm i -g express-draft
exp prisma-demo
ls
vs prisma-demo
git add .
git init
git init
git add .
git commit -m "init prisma demo"
touch .gitignore
rm -rf .git
git init
git add .
git commit -m "init prisma demo"
caddy
npm i -D prisma
npm i @prisma/client
alias postgres
postgres
dockerKillAndRemoveContainer postgres
docker volume ls
docker volume remove 35
docker volume remove 35c5
docker volume remove 35c5a
docker volume remove 35c5a4
docker volume ls
docker volume remove 35c5a4a919e178eb77d9a8e14171cfd9b47ad0b3a17039dee7a131781f3dc447
docker volume remove 96089a66816efe1aa05ce8c13e5af894fb4fff589f95ee4cfe99674fe4f9544e
docker volume ls
postgres
docker volume ls
git add.
git status
git add .
git commit -m "fixed typo in postgres command"
postgres
docker image ls
docker volume ls
postgres
dps
alias postgres
docker volume ls
docker container stop postgres
alias
alias | grep docker
postgresstop
docker volume ls
docker volume remove 4457ea38d88abb1f85e7e38e2588d120bef495b3a01766d5af180b897da8f5be
docker volume remove c67df6d8c3388226d393db92a25700c46f74b7cdcc8f647577ddf1fd7ad5ab95
ls
docker volume ls
postgres
docker volume ls
docker volume ls
docker volume ls
alias postgres
vim ~/.zshrc
cd /home/bhumit070/dotfiles
ls
cd aliases
ls
vim docker
alias postgres
source .zsh
zsh
npx prisma init
git add .
git commit -m "Added prisma"
npx prisma init
npx gitignore
rm -rf .git
git init
git add .
git commit -m "init & prisma add"
postgres
postgress
postgress
postgress
mysqls
mysqls
dockerKillAndRemoveContainer mysl
dockerKillAndRemoveContainer mysql
mysql
docker volume ls
mysqls
npx prisma migrate dev
git commit -m "added migrations"
cal
cal -n 2
git commit -m 'created crudh with product'
git add .
git commit -m 'created crudh with product'
git add .
git commit -m "create schema for prisma"
npx prisma studio
npx prisma studio
npx prisma studio
npx prisma studio
npm run dev
npm run dev
-
-
alias -
- zrc
-
alias
- alias
- zrc
- zrc
ls
cd dotfiles
sl
c
cd
code .zshrc
cd /mnt/programmes/prisma
cd /mnt/programmes/prisma
cd /mnt/programmes/prisma
cd /mnt/programmes/prisma
echo $ZSH_THEME_DIR
cd $ZSH_THEME_DIR
pwd
ls
cat .p10k.zsh
code .p10k.zsh
p10k
p10k reload
cd /mnt/programmes/prisma
p10k reload
p10k reload
p10k reload
p10k 
p10k help
p10k display
p10k display print
p10k print
p10k help
p10k help reload
p10k help segment
p10k reload
p10k reload
p10k reload
p10k reload
p10k reload
p10k reload
typeset
reloadp10k
zsh --version
zsh -v
cd /mnt/programmes/prisma/prisma-demo
cd /mnt/programmes/prisma
ls
ls
cd prisma-demo
ls
reloadp10k
reloadp10k
reloadp10k
cd /mnt/programmes/prisma/prisma-demo
cd /mnt/programmes/prisma/prisma-demo
cd /mnt/programmes/prisma/prisma-demo
cd /mnt/programmes/prisma/prisma-demo
l
ls
reloadp10k
ls
cd /mnt/programmes/prisma/prisma-demo
touch .nvm
vim .nvm
zsh
reloadp10k
cd /mnt/programmes/prisma/prisma-demo
reloadp10k
reloadp10k
cd /mnt/programmes/prisma/prisma-demo
cd dotfiles
ls
code .p10k.zsh
zsh
sudo pacman -Syuu
sudo pacman -Syuu
zsh
bash --version
bash (pwd)
bash 3
pof
cd Desktop
ssh -i "footy-hasura-staging.pem" ubuntu@ec2-18-196-155-140.eu-central-1.compute.amazonaws.com
ls -la
ls la *.pem
chmod 400 footy-hasura-staging.pem
ssh -i "footy-hasura-staging.pem" ubuntu@ec2-18-196-155-140.eu-central-1.compute.amazonaws.com
ssh ubuntu@ec2-3-120-192-67.eu-central-1.compute.amazonaws.com
ssh ubuntu@ec2-3-120-192-67.eu-central-1.compute.amazonaws.com
cd Desktop
ssh -i "footy-hasura-staging.pem" ubuntu@ec2-18-196-155-140.eu-central-1.compute.amazonaws.com
ssh -i "footy-hasura-staging.pem" ubuntu@ec2-18-196-155-140.eu-central-1.compute.amazonaws.com
ping -c 10 google.com
ssh -i "footy-hasura-staging.pem" ubuntu@ec2-18-196-155-140.eu-central-1.compute.amazonaws.com
cd Desktop
ssh -i "footy-hasura-staging.pem" ubuntu@ec2-18-196-155-140.eu-central-1.compute.amazonaws.com
ssh -i "footy-hasura-staging.pem" ubuntu@ec2-18-196-155-140.eu-central-1.compute.amazonaws.com
cd /mnt/data/office-work
cd /mnt/data
ls
mkdir office-work
cd office-work
l
l
mkdir footy
cd footy
ls
code .
nmcli c up 'iPhone 12'
docker
docker 
docker-compose
sudo pacman -S docker-compose
ls
cd /mnt/programmes
ls
cd hasura
ls
mkdir footy
wget https://raw.githubusercontent.com/hasura/graphql-engine/stable/install-manifests/docker-compose/docker-compose.yaml\

vsc
cp docker-compose.yaml footy
vs footy
docker compose
docker-compose
ls
docker-compose up
docker-compose up
docker-compose up
pwd
touch Caddyfile
touch Caddyfile
touch Caddyfile
cd /mnt/programmes/hasura/footy
ls
docker compose up
docker volume ls
docker volume create hasura-footy-v2_db_data
docker volume ls
docker compose up
docker compose up
dps
dps
touch .env
cd De
cd Desktop
sl
ls
unzip league-manager-master.zip
ls
cd league-manager-master
ls
vsc
cd Desktop
ssh -i "footy-hasura-staging.pem" ubuntu@ec2-18-196-155-140.eu-central-1.compute.amazonaws.com
cd Desktop
sl
ls -la *.pem
chmod 400 footy-hasura-production.pem
ls -la *.pem
ssh -i "footy-hasura-production.pem" ubuntu@ec2-3-120-192-67.eu-central-1.compute.amazonaws.com
touch insstance-details.md
npm i -g hasura
docker compose up
yarn && yarn serve
yarn && yarn serve
yarn && yarn serve
htop
htop
pkill 8000
pkill 8080
pkill -k 8080
fuser -k 8080/tcp
htop
cd Desktop
ssh -i "footy-hasura-production.pem" ubuntu@ec2-3-120-192-67.eu-central-1.compute.amazonaws.com
nmcli c up 'Redmi Note 8'
ping -c 10 google.com
cd /mnt/programmes/hasura/footy
ls
ls
docker compose up
i
yarn 
yarn serve
yarn serve
yarn serve
ping -c 10 google.com
flameshot
flameshot --gui
flameshot --help
flameshot gui
login
ping -c 10 google.com
docker info
npx fireship-quiz
cd /mnt/programmes
ls
mkdir electron
cd /mnt/programmes/electron
ls
ls
npx create-electron-app docker-desktop
ls
vs docker-desktop
touch src/render.js
git commit -m "init"
git add .
git commit -m "init"
git status
npm run satrt
npm run start
nmcli c up 'Redmi Note 8'
ping -c 10 google.com
npm run start
cd /mnt/programmes
sl
mkdir full-stack
cd full-stack
ls
ls
mkdir chat
cd chat
ls
mkdir backend
npx create-nuxt-app frontend
cd frontend
ls
vsc
cd /mnt/programmes/full-stack
ls
cd chat
l
ls
cd backend
yarn init -y
yarn add express 
yarn add -D nodemon
ls
vsc
tr
sudo pacman -S tree
tree .
tree --help
tree --help | grep ignore
tree . --igonre node_modules
tree . --igonre-case node_modules
paru -S wine-stable
node
touch server.js
touch .gitignore
yarn add doten
yarn add dotenv
node server.js
node server.js
node server.js
node server.js
node server.js
node server.js
node server.js
node server.js
node server.js
yarn add -D prisma
yarn add @prisma/client
yarn add joi
mysql
docker container start mysql
cd /mnt/programmes
ls
sl
ls
ls
cd pro-backend
ls
cd s
cd store
ls
vsc
yarn dev
node server.js
npx prisma init 
npx prisma generate
cd /mnt/data
cd asana
sl
cd StakeCube-Backend
vsc
cd /mnt/programmes
ping -c 10 google.com\
ping -c 10 google.com
cd chat
nodemon server.js
nodemon server.js
nodemon server.js
nodemon server.js
nodemon server.js
nodemon server.js
nmcli c up 'iPhone 12'
nmcli c up 'Redmi Note 8'
ping -c 10 google.com\
ping -c 10 google.com
ping -c 10 google.com
htop
ping -c 10 google.com
cal -n 2
ping -c 10 google.com
cd Desktop
thunar 
cd /mnt/programmes
l
ls
ls
cd full-stack
l
ls
cd chat
ls
cd backend
ls
rm -rf *
ls
rm -rf *
npx prisma init
ls
ls
cd prisma
ls
cd ../
ls
cd /mnt/programmes
l
cd full-stack/chat
ls
cd backend
ls
npx express-generator-typescript\

ls
docker ps
sudo chown "$USER":"$USER" /home/"$USER"/.docker -R\

docker ps
docker ps
cd
cd .docker
ls
cd config.json
ls
cd ../
rm -rf config.json
docker ps
docker ps
cd /mnt/programmes/full-stack
ls
cd chat
ls
cd backend
ls
mv express-gen-ts app
ls
vsc
rm -rf .
rm -rf *
cat .gitignore
touch tsconfig.json
yarn init -y
yarn add -D typescript
yarn add express
yarn add -D @types/express
touch server.ts
rm -rf .eslintrc.js
yarn add -D eslint
npx eslint --init
npx eslint --init
tsc
tsc
rm -rf package-lock.json
yarn add --dev nodemon ts-node\

touch nodemon.json
nodemon server.ts
npm run start
npm run start
nmcli c up 'Redmi Note 8'
htop
htop
htop
mysqls
npx prisma init
git init
git add .
git commit -m "init"
git add .
git commit --amend --no-edit
yarn add bcrypt ; exit
xe
ex
alias ex
yarn add joi
yarn aadd dotenv
yarn add dotenv
ls
nodemon server.ts
pfo
pof
pof
ping -c 10 google.com
dps
dps
cd /mnt/data/office-work
ls
cd footy
ls
docker compose down
docker compose down
ls
l
dps
docker compose down
docker container stop 7cea35e31930
dps
dd
alias di
alias dci
rmi
alias 
alias  | grep docker
cd do
cd
cd dotfiles
ls
cd aliases
ls
cat docker
systemctl status nginx
sudo pacman -S ngixn
sudo pacman -S ngginx
sudo pacman -S nginx
ddi
dps
ddi
dps
dps
docker image ls
ddi -f
docker volume ls
ddc
dps
dpsdps
dps
cd .docker
sl
rm -rf config.json
ls
dps
mysql
ls -la
ls 
exa
exa -la
ls
lls
ls
postgres & mongo & mysql
dps
alias ddc
sudo systemctl status nginx
systemctl start nginx
sudo systemctl status nginx
whereis nginx
cd /etc/nginx
ls
whereis nginx
cd /usr/share/nginx
ls
cd html
ls
cd ../
cd ../
ls
ls
ls | grep nginx
sudo chown "$USER":"$USER" nginx
cd nginx
ls
cd html
cd ../
sudo chown "$USER":"$USER" .
ls
cd html
sudo chown "$USER":"$USER" .
ls
cd ../
vsc
nginx
nginx -v
nginx -t
sudo systemctl status nginx
cd /etc/nginx/n
cd /etc/nginx
ls
sudo nginx -t
 cd /etc/nginx
sudo nvim nginx.conf
cd /etc/nginx
ls
su
nginx reload 
nginx --help
nginx -g
nginx -h
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
nginx -T
cd /etc/nginx
ls
sudo nvim nginx.conf
nginx -T
nginx -T
nginx -T
sudo nginx -T
nginx -t
systemctl reload nginx
systemctl status nginx
systemctl status nginx
systemctl restart nginx
systemctl status nginx
ls
vim nginx.conf 
nvim nginx.conf 
ls
mkdir conf.d
nvim nginx.conf 
cd conf.d/
ls
vim first.conf
nvim first.conf
nvim first.conf
ls
startx
nmcli c up 'Redmi Note 8'
nmcli c up 'Redmi Note 8'
nmcli c up 'Redmi Note 8'
rbt
nmcli c up 'Redmi Note 8'
nmcli c up 'Redmi Note 8'
systemctl status wi-fi
systemctl status wifi
nmcli c up 'Redmi Note 8'
systemctl status networkmanager
systemctl status NetworkManager
nmcli
systemctl status lightdm
systemctl enable lightdm
rbt
nmcli
ls -la
cat .yarn
cd .yarn
ls
cd bin
ls
ls
cd create-vite
cat create-vite 
ls
cd .Xclients
sl
cat .Xclients
nmcli c up 'Redmi Note 8'
rbt
nmcli c up 'Redmi Note 8'
pof
ls
pof
whereis nginx
nmcli c up 'iPhone 12'
ping google.com
nmcli
wpa_cli
sudo wpa_cli -i wlan0
nmcli show
nmcli --help
nmcli -a
nmcli --help
m,cli -p
nmcli -p
nmcli d
ping localhost
sudo lsusb
sudo lspci
sudo lshw -C network
lshw
journalctl -n 1000 -u NetworkManger -u wpa_supplicant
nmcli gen lon level debug
nmcli gen log level debug
sudo nmcli gen log level debug
iw
iw wlan0 scan
iw wlan0 scan
systemctl status wpa_supplicant
sudo systemctl enable wpa_supplicant
rbt
nmcli c up 'iPhone 12'
systemctl status wpa_supplicant
nmcli 
rfkill list
nmcli radio
nmcli radio wifi on
nmcli c up 'iPhone 12'
nmcli c up 'iPhone 12'
paru -S certbot
whereis certbot
sudo certbot --nginx
sudo pacman -S python3-certbot-nginx
paru -S python3-certbot-nginx
paru -S certbot-nginx
sudo certbot --nginx
cd /etc/nginx/n
cd /etc/nginx/
ls
cd conf.d
ls
cat first.conf
ls
cat first.conf
cd /etc/nginx
ls
cd ls
ls
cd conf.d
ls
ls
cd ../
ls
ls
cat nginx.conf
ls
cd ../
chmod -r "$USER:$USER" nginx
sudo chmod -r "$USER:$USER" nginx
sudo chmod "$USER:$USER" -i nginx
sudo chmod "$USER:$USER" -r nginx
chmod 777 nginx
sudo chmod 777 nginx
ls
cd nginx
ls
vsc
cd /mnt/programmes
ls
ls
cd node
ls
cd prisma
cd te
cd test-nginx
ls
cat servers.js
vim servers.js
node servers.js
ls
npm i && node servers.js
cat servers.js
node servers.js
ls
cat servers.js
node servers.js
vim servers.js
node servers.js
vim servers.js
node servers.js
po
pof
cd /mnt/programmes/full-stack
ls
cd chat
ls
cd ../
rm -rf chat
nmcli c up 'iPhone 12'
nmcli c up 'iPhone 12'
cd /mnt/programmes/full-stack
l
ls
cd chat
ls
ls
npm i -g typeorm
typeorm
typeorm init
ls
l
ls
cd /mnt/programmes/full-stack
l
ls
cd chat
mkdir backend
typeorm init
ls
vsc
cp * backend
cp -r * backend
thunar .
vs backend
mysql
mysqls
docker container start mysql
mysqls
cd /mnt/programmes/full-stack
ls
cd chat
sl
ls
cd /mnt/programmes/full-stack
cd chat/backend
rm -rf *
rm -rf *
yarn add sequelize
yarn add mysql2
yarn add @types/sequelize
yarn add -D @types/node @types/validator
rm -rf *
npm run start
npm run start
npm uninstall mysql && npm i mysql
npm uninstall mysql && npm i mysql2
npm run start
npm run start
npm run start
npm run start
npm run start
npm run start
yarn init -y
yarn add express dotenv
yarn add -D typescript ts-node nodemon
mkdir src
npx tsc
npx tsc init
npx tsc --init
nodemon src/index.ts
yarn dev
yarn dev
yarn add @types/express
yarn -d add @types/express
yarn  add -d @types/express
yarn  add -D @types/express
rm -rf node_modules
yarn
yarn dev
cd /mnt/no
cd /mnt/programmes/node
l
mkdir sequelize-typescritp
cd sequelize-typescritp
ls
yarn init -y
 yarn add express
yarn add -D typescript ts-node @types/express @types/node\

npx tsc --init
vsc
npm install -g sequelize-cli sequelize\

mkdir src
mkdir src/db
mkdir src/api
yarn add -D nodemon
yarn add dotenv
yarn add sequelize mysql2
mkdir src/db/models
npm run dev
nodemon src/index.ts
nodemon src/index.ts
ping localhost
cd /mnt/programmes/full-stack
ls
mkdir chat
pof
ping localhost
ls
ls -l
ls -lah
docker container start mysql
dps
ddc
ls
alias ddc
dps
ls -lah
systemctl status nginx
systemctl start nginx
systemctl status nginx
docker image ls
docker image ls
docker pull phpmyadmin/phpmyadmin
code
cd /etc/nginx
ls
pof
phpmyadmin
docker container start phpmyadmin
mysql
docker image ls
docker volume ls
alias mysql
mysql
ddc
ls
dps
mysql
mysql
ddc
ls
docker volume ls
docker volume remove 62dd
docker volume remove 62dd9
docker volume remove 62dd90
docker volume remove 62dd9036
docker volume ls
docker volume remove 62dd9036a92ae51a041a2f9f1f697db88b6943e2c52258eb9478f6eb5fe26ee4
docker volume remove 578bdcbc363a5cf06aa59a7d2c4f374850feb419069ee000eaf26ac15bfe0850
ls
docker volume ls
mysqls
mysql
docker volume ls
docker volume ls
docker volume ls
docker volume ls
docker run --name phpmyadmin -d --link mysql:db -p 8080:80 phpmyadmin
docker image ls
docker run --name phpmyadmin --link mysql:db -p 8080:80 phpmyadmin
cd dotfiles/
ls
cd aliases
ls
cat docker
vim docker
phpmyadmin
zsh
rbt
rbt
paru -R slack-desktop
docker container start phpmyadmin
docker container start mysql
docker container start phpm
docker container start phpmyadmin
ls
ls
- 
systemctl status nginx
systemctl start nginx
systemctl status nginx
cd /etc/nginx/
ls
ls
mkdir sites-enabled
ls
cd sites-enabled
vim phpmyadmin
ls
cd ../
vsc
cd /var/www/html
certbot --nginx
certbot --nginx -v
ls -lag
ls -lah
ls
ls
cd /mnt/programmes
ls
mkdir caddy
ls
cd caddy
caddy reverse-proxy --from :8080 --to 127.0.0.1:9000
caddy reverse-proxy --from :2016 --to 127.0.0.1:8080
caddy reverse-proxy --from /phpmyadmin --to 127.0.0.1:8080
caddy reverse-proxy --from http://codingmachine/phpmyadmin --to 127.0.0.1:8080
caddy reverse-proxy --from :80 --to 127.0.0.1:8080
sudo pacman -S caddy
nginx -t
nginx -t
nginx -t
nginx -t
nginx -t
nginx -t
systemctl status nginx
systemctl reload nginx
systemctl status nginx
nginx -t
nginx -t
nginx -t
sudo nginx -t
mkdir /etc/systemd/system/nginx.service.d\

sudo mkdir /etc/systemd/system/nginx.service.d\

printf "[Service]\nExecStartPost=/bin/sleep 0.1\n" > /etc/systemd/system/nginx.service.d/override.conf
sudo printf "[Service]\nExecStartPost=/bin/sleep 0.1\n" > /etc/systemd/system/nginx.service.d/override.conf
vim /etc/systemd/system/nginx.service.d/override.conf
sudo nvim /etc/systemd/system/nginx.service.d/override.conf
nginx -t
systemctl daemon-reload\

nginx 0t
nginx -t
ExecStopPost=/bin/rm -f /run/nginx.pid\

sudo nginx -t
cd conf.d
ls
sudo touch phpmyadmin.conf
sudo nginx -t
cd /mnt/programmes
ls
cd node
ls
mkdir revamping
cd revamping
ls
yarn init -y
ls
vsc
nmcli c up 'iPhone 12'
nmcli c up 'iPhone 12'
systemctl stop nginx
systemctl stop nginx
caddy
systemctl status caddy
sudo ufw status
ping localhost
ipconfig /flushdns\

rnt
rbt
mkdir src
cd src
ls
touch server.ts
cd ../
yarn add express dotenv
yarn add -D nodemon
yarn add -D typescript ts-node @types/express @types/node
yarn add -D typescript ts-node @types/express @types/node
npx tsc --init
yarn edv
yarn dev
yarn dev
yarn dev
docker container start phpmyadmin
docker container start mysql
docker container start phpmyadmin
systemctl status caddy
systemctl status nginx
sudo pacman -R nginx
nginx
mongo
docker volume ls
docker volume ls
yarn add mongoos
yarn add mongoose
cd De
cd Desktop
git clone https://github.com/luixaviles/node-typescript-app.git
l
ls
ls
ls
l
ls
cd node-typescript-app
ls
vsc
npm i
dpkg
ping google.com
nmcli c up 'iPhone 12'
dps
dps -a
dps -q
dps -q
for i in $(dps -q)\
echo $i
for i in $(dps -q)\
docker container start $i
for i in $(dps -q)\
docker container start $i
cd /mnt/programmes
ls
ls
cd node
sl
ls
cd revamping
ls
vsc
nmcli c up 'iPhone 12'
npx tsc
node dist/server.js
sl
ls
ls -lah
mkdir src
ls
cd src
ls
cd ../
ls
cat ormconfig.json
cd /mnt/programmes
ls
ls
ls
ping google.com
while true\
do\
echo "done"\
sleep 3s\
done
while true\
do\
echo "$whoami"\
sleep 3s\
done
whoami
echo "$whoami'\
"
echo "$whoami"
echo "I am $whoami"
echo "I am $(whoami)"
ping google.com
ping google.com
l
ls
ls -lag
ls -lag
sl -lah
cat .Xclients
--login -i
ssh
ssh | grep i
ssh | grep -i
dps -q
ls
dps -q
dps
env
env
nmcli c up 'Redmi Note 8'
nmcli c up 'Redmi Note 8'
nmcli c up 'Redmi Note 8'
ping chaku.com
dmenu_run
seq 10 | dmenu
seq 10 | dmenu_run
seq 10 | dmenu
dps -q | dmenu
container="$(dps -q | dmenu)" && echo $container
container="$(dps -q | dmenu)" && echo "selected $(container)"
container="$(dps -q | dmenu)" && echo "selected $container"
nodemon src/index.ts
nodemon src/index.ts
nodemon src/server.ts
nodemon src/server.ts
nodemon src/server.ts
nodemon src/server.ts
nodemon src/server.ts
cd Desktop
l
ls
vim test.js
node test.js
vim test.js
node test.js
vim test.js
node test.js
vim test.js
rm -rf test.js
ls -lah
cat README.md
ls
cd .xinitrc
cat .xinitrc
dbus_args
cd /mnt/programmes
mkdir typescript
vsc
vs typescript
ping google.com
ls
nmcli c up 'Redmi Note 8'
hasura
hasura
hasura
npm i -g hasura
hasura
cd /mnt/programmes
cd hasura
ls
ls
cd first
ls
cd first
ls
cd ../../
s
snox
ls
paru -S webstorm
paru -S webstorm
curl -L https://github.com/hasura/graphql-engine/raw/stable/cli/get.sh | bash\

curl -L https://github.com/hasura/graphql-engine/raw/stable/cli/get.sh | bash\

ls
cd /mnt/programmes
cd hasura
ls
cd first
ls
cd ../
ls
hasura init
cd test-demo
ls
hasura console
ls
dps
docker image s
docker image ls
docker container start hasura/graphql-engine
docker run hasura/graphql-engine
docker run hasura/graphql-engine
alias mysql
ls
cat config.yaml
cd /mnt/programmes/hasura/test-demo
ls
vsc
ls
ls
cd dotfiles
ls
vsc
cat .zshrc
cat .zshrc
