fonts
vim /etc/fonts/local.con
vim /etc/fonts/local.conf
sudo vim /etc/fonts/local.conf
sudo pacman -S ttf-cascadia-code
code --restore
fuser -k 4000/tcp
man fortune
fortune -m
fortune funny
fortune funny not-funny
fortune node
fortune -n 34
fortune -a
fortune -c
fortune
vim ~/.zprofile
git clone https://github.com/ZoomTen/lightdm-webkit-theme-macos.git
cd /usr/share
sl | grep lightdm
cd lightdm-gtk-greeter-settings
vlock
vlock -a -s\

switch-to-greeter
sudo pacman -S lightdm lightdm-webkit2-greeter wget\

wget git.io/webkit2 -O theme.tar.gz\

mkdir glorious\

mv theme.tar.gz glorious/\

cd glorious
tar zxvf theme.tar.gz\

rm theme.tar.gz\

cd ..\

sudo mv glorious/ /usr/share/lightdm-webkit/themes/\

sudo reboot\

lightdm
cd /usr/lib/lightdm
cat lightdm-guest-session
whereis lightdm
cd /etc/li
cat lightdm-gtk-greeter.conf
cat Xsession
sudo vim /etc/lightdm/lightdm.conf
sudo systemctl status lightdm
sudo systemctl reload lightdm
sudo pacman -S lightdm-webkit2-greeter-settings
yay -S lightdm-webkit2-greeter-settings
sudo pacman -S lightdm-webkit2-greeter\

vim /etc/lightdm/lightdm-gtk-greeter.conf
cd /mnt/data/walls
sudo cp /mnt/data/walls/pp.jpeg /usr/share/backgrounds
alias | grep lock
whereis glorious
cd /usr/share/backgrounds
cd /etc/lightdm
cd /
git clone git@github.com:WebDevSimplified/ocean-trash.git
git clone https://github.com/WebDevSimplified/ocean-trash.git
cd ocean-trash
yay -S -S lightdm-webkit-theme-aether
yay -S lightdm-webkit-theme-aether
sudo vim /etc/lightdm/lightdm-webkit2-greeter.conf
cd /var/lib
cd AccountsService
cd users
cd /usr/share/lightdm-webkit
cd themes
cd lightdm-webkit-theme-aether
cat index.
cat index.theme
cd src/img/wallpapers
sudo cp /mnt/data/walls/wall1-edited.png /usr/share/lightdm-webkit/themes/lightdm-webkit-theme-aether/src/img/wallpapers
sudo systemctl restart lightdm
cd /usr/share/lightdm-webkit/themes/lightdm-webkit-theme-aether
sudo cp -r lightdm-webkit-theme-aether /home/bhumit070/Desktop
vsc lightdm-webkit-theme-aether
alias  | grep vs
cat ~./zshrc | tail
vs lightdm-webkit-theme-aether
chmod 777 .
sudo chmod 777 .
cat ~/.zshrc | tail
vs ~/.zshrc
ttyclock
echo $($systemdPrefix)
echo $(systemdPrefix)
stop nginx
service start ngin
service 
service start nginx
service reload nginx
git commit -m "added functions for systemd"
sudp pacman -S xrander
sudo pacman -S xrander
sudo pacman -S xrandar
sudo pacman -S xrandr
man kernel
ulauncher --toggle
ulauncher -toggle
ulauncher -t
man ulauncher
ulauncher --help
cat ~/.profile
vim ~/.profile
notify-send
notify-send "this"
cd /mnt/programmes/js/
vs notification
yay -S xfdashboard-git
yay -S xrandr
xrander
xrandar
sudo pacman -S xorg-xrandr
cd /mnt/data/series/one\ piece/970-âƒ¹¾âƒ¹¾
cd /mnt/programmes/Bills/
find node_modules
node mysql
cat db.js
vim db.js
docker container ps
cd /mnt/data/databases
cd mysql
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=true -p 3306:3306 -v /mnt/data/databases/mysql:/var/lib/mysql mysql
vs some.js
dps -a 
docker run\
--name mysql\
	- e MYSQL_ALLOW_EMPTY_PASSWORD = yes\
		- p 3306: 3306\
			- v / mnt / data / databases / mysql: /var/lib / mysql\
mysql
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -p 3306: 3306  -v /mnt/data/databases/mysql:/var/lib/mysql mysql
docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -p 3306:3306  -v /mnt/data/databases/mysql:/var/lib/mysql mysql
docker container 
docker container stats mysql
docker container logs
cd databases
mkdir mongo mysql postgres
docker container logs mongo
docker container logs mongodb | grep fatal
docker container logs mongodb
docker volume ls 
docker exec -it mysql
ps aux | docker
ps aux | grep docker
ps aux | grep mysql
docker volume craete postgres
docker container logs postgres
zrc
dcc
ls 0a
cd back
cd typeorm
cat index.ts
systemctl statusnginx
sd start ngixn
sd stop nginx
sg
sd start nginx
sd status nginx
yay -s robo3t-bin
node app.js
npm s
docker volume
docker run -d --name mysql -e MYSQL_USER=bhumit070 -e MYSQL_PASSWORD=bhumit070 -p 3306:3306 -v mysql:/var/lib/mysql mysql
docker volume ps -a
docker volume rm mysql
docker image rm mysql
docker volueme ls
docker voluem ls
docker volume create mysql
docker image rm archlinux
docker image rm ubuntu
docker container ps -a
mysqlstop
mongostop
docker exec -it mysql mysql
docker exec -it mysql bash < bills.sql
docker exec -it mysql mysql < bills.sql
docker exec -it mysql mysql 
tty
cd /mnt/programmes/Bills
docker cp bills.sql mysql:/bills.sql
docker exec -it mysql bash
yay -S emoji-keyboard-git
cd yay
rm -rf emoji-keyboard-git
sudo pacman -S gnome-shell
gnome-shell-extension-clipboard-indicator
sudo pacman -Sgnome-shell-extension-clipboard-indicator
sudo pacman -S gnome-shell-extension-clipboard-indicator
yay gnome-shell-extension-clipboard-indicator
sudo pacman -R gnome-extensions
gnome-extensions list
gnome-extensions
gnome-extensions install
gnome-shell
vim ~/.zsh_pro
vim ~/.zsh_profile
vim ~/.zshenv
screenfetch
sudo pacman -S xmonad xmonad-contrib
whereis xmonad
man xmonad
mkdir .xmonad
vs xmonad.hs
xrandr -s 
xrandr -s  1920x1080
sudo pacman -S picom
sudo pacman -S nm-applet
yay -S nm-applet
sudo pacman -S network-manager-applet 
lightdm-session-quir
lightdm-session
lightdm -h
man lightdm
dm-tool logout
rb
cd walls
ulauncher
nitrogen --restore
nitrogen
light
sudo pacman -S light
man light
light -h
light -L
light -v
cd ~/.xinitrc
cat ~/.xinitrc
xmoadmap
xmodmap
whereis xmodmap
cd xinitrc.d
cat xinitrc
echo $sysmodmap
echo $usermodmap
cd ~/.Xmoadmap
cd ~/.Xmodmap
cd /etc/X11/xinit
cat .Xmoadmap
sudo pacman -S xf86-input-libinput
dm-tool lightdm-session-quit
dm-tool --help
dm-tool switch-to-greeter
echo "pointer = 1 2 3 5 4 7 6 8 9 10 11 12" > ~/.Xmodmap && xmodmap ~/.Xmodmap
vim .Xmoadmap
cat ~/.Xmoadmap
cat ~/.Xmoadmap > ~/.Xmodmap
cat ~/.Xmodmap
echo "pointer = 1 2 3 5 4 7 6 8 9 10 11 12"
vim .Xmodmap
xmodmap ~/.Xmoadmap
xmodmap ~/.Xmodmap
cd /etc/X11/xorg.conf.d
cat 30-touchpad.conf
vim 30-touchpad.conf
sudo vim 30-touchpad.conf
mkdir ~/.config/pulse
cd ~/.config/pulse
cat cookie
pacman -S alsa-utils\

sudo pacman -S alsa-utils\

alsamixer\

sudo pacman -S volumeicon
volumeicon --display
volumeicon --display=1
volumeicon --help
yay -S paman
sudo pacman -S xdotool
sudo pacman -S pavucontrol
sudo systemctl enable pulseaudio.socket --now
vim volume.sh
chmod +x volume.sh
./volume.sh
./volume.sh increase
cat volume.sh
sudo pacman -S Xbondkeys
sudo pacman -S Xbindkeys
sudo pacman -S xbindkeys
sudo pacman -S pactl
yay -S pactl
pactl set-sink-volume @DEFAULT_SINK@ -1000
pactl set-sink-volume @DEFAULT_SINK@ +1000
xbindkeya
sudo pacman -S xbindkeys_config-gtk2
yay -S xbindkeys_config-gtk2
cd /mnt/programmes/go//yt-hitesh
vs mongoapi
acpi
notify-send $(acpi)
notify-send 
man notify-send
yay -S https://aur.archlinux.org/packages/deadd-notification-center/
yay -Sdeadd-notification-center
yay -S deadd-notification-center
volume
volumeicon
xbindkeys
xmo
code xmonad
code xmonad.
cp xmonad.hs xmonad-bhumit070.hs
code xmonad.hs
sudo pacman -S xmobar
sudo systemctl disable lightd
sudo systemctl disable lightdm
power
iwctl
sudo pacman -S lxsession
sudo pacman -S wifi-menu
settings
sd status NetworkManager
nmcli d connect bhumit
nmcli d connect wlan0
nmcli d connect wlp2s0 bhunit
nmcli d connect wlp2s0 bhumit
nmcli d connect wlp2s0
nmcli device connect
nmcli device connect wlp2s0 bhumit
nmcli device connect wlp2s0
nmcli device connect wlp2s0 'bhumit'
nmcli device connect wlp2s0 --wireless 'bhumit'
nmtui
nm-apple
nm-applet
man nm-applet
nm-connection-editor
nmcli nm wifi on
man nmcli
vs ~/.xmonad/xmonad.hs
yad
Yad
xmonad --recompile
sudo apt-get remove gnome
sudo apt-get remove gnome-session
sudo pacman -S gnome
gnome-boxes
pulseaudio --start
alsamixer
sd status pulseaudio
systemctl --system enable --now pulseaudio.service\

sudo pacman -S pulseaudio
pulseaudio
man pulseaudio 
pulseaudio --help
pulseaudio --system=true
sudo pulseaudio --system=true
pavucontrol
man pavucontrol
pavucontrol --help-all
pavucontrol --help
vim .xbindkeys
ls -a
pactl
pactl set-sink-mute @DEFAULT_SINK@ toggle
sudo systemctl status pulseaudio
vim .xbindkeysrc
vim ~/.xmonad/xmonad.hs
lxsession
pulseaudio --daemonize=no --system --realtime --log-target=journal
vim ~/.config/alacritty/alacritty.yml
xrandr
cat mpv-shot0001.jpg
lolcat
lolcat .
ls | lolcat
ls | lolcat -a
cowsay
cowsay "Bhoomit"
man cowsay
cowsay -e "EYE"
cowsay -e "EYE" "ok"
xombar
xmobar
man xmobar
xmobar --help
xmobar -d
dmenu_run -v
man dmenu
dmenu_run -i -l
dmenu_run -i
picom
man picom
cd /mnt/programmes/react
npx create-react-app toast-global
cd toast-global
yarn add react-toastify
man sl
man ls
pacman -Q alacritty
pacman -Q windows
cd /mnt/programmes/go/yt-hitesh
mkdir go-routines
vs go-routines
time touch main.js
time (touch main.js)
rm -rf main.
rm -rf main.js
sudo pacman -S qbittorrent
cat .xmonad
cd .xmonad
cat xmonad.h
cat xmonad.hs
cp xmonad-bhumit070.hs ~/dotfiles
cp xmonad.hs ~/dotfiles
git commit -m "Added xmonad configs"
dmenu_run -l -i
dmenu_run -q
dmenu_run -h
dmenu_run -m
dmenu_run --auto-repair
ls .zsh*
cp .zsh* ~/dotfiles
echo $HISTFILE                                                                                                                                                                                
docker container start mysqls
ps aux | grep spotify
time nmcli c up 'iPhone 12'
git commit -m "add / edit rate limit in db and save in redis"
vs StakeCube-Backend
git commit -m "added global limit model and updated rate limiter model"
git commit -m "updated data access layer files"
git commit -m "updated ip rate limit middleware & added global rate limit middleware"
git commit -m "updated ip limiter controller file and updated global rate limiter controller file"
git commit -m "service file for global limits"
git commit -m "added global limit routes , register global routes in app"
git commit -m "added more constant variables"
cat .profile
cat .gtkrc-2.0
cat .rediscli_history
cd .gnupg
calc
nmcli c ip 'bhumit'
git commit -m "folder structure"
onfr
redis-cli -h 127.0.0.1 -p 6379 
git commit -m "fetch headers for database"
git commit -m "Added method in rate limit model"
git commit --amend
cd ../data
code StakeCube-Backend
mkdir params
cd params
fuser -k 5000/tcp
git commit -m "added route,method,paramCount"
git commit -m
Bollywood is no longer the king of Indian Cinema âƒ¸ƒ€\

sudo fuser -k 3001/tcp
cat ~/.cache/sessions
echo $SAVEHIST
cd ~/.cache/sessions
nmcli show profiles
alias mysqla
alias mysqls
code ~/dotfiles
git commit -m "docker function added "
git lgo
cp .zshrc ~/dotfiles
cp .zshrc ~/dotfiles/.zshrc
cp ~/.zshrc ~/dotfiles/.zshrc
nmcli c ip 'Redmi note 5 pro'
nmcli c up 'Redmi note 5 pro'
git commit -m "updated rate limiter mdoel"
git commit -m "added block ip time as constatn and removed global ip middleware & removed params count from cutome limit key getter function"
git commit -m "updated controller to find existing route by route & method"
git commit -m "added ip rate limit middleware"
git commit -m "added ip rate limit before every route"
git remote origin add https://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@github.com/kavinsharma/stake-cube-backend
git remote add origin https://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@github.com/kavinsharma/stake-cube-backend
git shortlog -s
sudo pacman -S flutter
ping -c 1000 google.com & echo "done"
git commit -m "added more comments and error code for 404"
git commit -m 
git commit 
git push 
mkdir pub-private
cd pub-private
codium 
cd /mnt/programmes/node/pub-private
touch i
du -h Videos
du -h .vim
du -h Postman
git status origin master
fuser -k 3001/tcp
rm -rf i
paru -S flutter
flutter sdk
sudo chmod 777 /opt/flutter/bin/cache
 sudo chown -R $USER /opt/flutter
ping -c 10
paru -S android-studio
sudo pacman -Ss
sudo pacman -Ss | grep java
flutter config --android-sdk
pacman -!
pacman -Q
pacman -Q | grep java
pacman -Q | grep jdk
sudo pacman -R jdk-openjdk
sudo pacman -Rf jdk8-openjdk
sudo pacman -R jdk8-openjdk
sudo pacman -Rdd jdk8-openjdk
sudo pacman -S jaav
sudo pacman -S jaa
sudo pacman -S java
paru -S java8
flutter /home/bhumit070/Android/Sdk --install "cmdline-tools;latest"
$HOME/Android/Sdk --install "cmdline-tools;latest"
cmdline-tools
flutter doctor 
mkdir flutter
cd flutter
flutter -h
flutter format
paru -S drawio-desktop
cd /mnt/data/series
cd ../seriesss
cd Documents
code index.js
rm -rf index.js
sudo pacman -S vimtutor
paru -S vimtutor
/usr/bin/vim
sudo pacman -S vim
vimtutor
vim ~/.config/nvim/init.vim
vim .
cat ~/.config/nvim/init.vim
cp init.vim bhumit070-init.vim
vim init.vim n
python3
cd ~/.config/nvim
cd expense-tracker
vim package.json
paru -S ðƒ¿ƒ¸ƒ°
cd ~/.fonts
sudo mkdir opentype
cd opentype
sudo cp ~/Desktop/OperatorMono-Bold.otf /usr/share/fonts/opentype/
cd expense-tracker-frontend
while true \
do\
ping -c google.com\
sleep 2s\
done
while true \
do\
ping google.com\
sleep 2s\
done
while true \
do\
echo time\
sleep 2s\
done
cd /usr/share/fonts
rm -rf opentype
sudo rm -rf opentype
sudo fc-cache -f -v
touch x.css
code x.css
codium .
codium x.css
code first_demo
flutter run ios
flutter run web
flutter devices
flutter build web
git clone https://github.com/kiliman/operator-mono-lig.git
cd operator-mono-lig
./build.sh
sudo cp FontsFree-Net-OperatorMono-Book.ttf /usr/share/fonts
fc-cache -f -v 
sudo paru -S otf-operator-mono
pip install fonttools
pip3 install fonttools
paru -S otf-operator-mono
flutter run -d chrome
git commit -m "Added api to fetch limits by category"
git pull origin rate-li
nodemon single-server.js
node single-server.js
pkill -f node
ping 173.249.0.173
redis-cli -h 173.212.192.114
git stash apply 1
git commit
git stash list
git stash apply 0
git commit -m "updated swagger docs for rate limtis"
alias | grep mysql
cd n
vs superheros
paru -S desltime-linux
paru -S desktime-linux
paru -S desktime
cd office-woek
mv /mnt/data/office-woek /mnt/data/office-work
sudo pacman -S dbeaver
git commit -m "updated code base and split docs into admin & non-admin section"
mv storytech storytech1
vs storytech
code ../storytech1
desktime-linux
desktime-linux --help
desktime-linux -d
desktime-linux -v
desktime-linux --login
paru -Q desktime
paru -R desktime
chmod +x DeskTime.AppImage
./DeskTime.AppImage
pkill desktime
ps aux | grep desktime
pkill -f desktime
pkill -f 6496
alias pkill
sudo pacman -S dpkg
dpkg -i DeskTime-6.0.0-alpha.34.deb
sudo dpkg -i DeskTime-6.0.0-alpha.34.deb
sudo pacman -S libgtk
sudo pacman -S libgtk-3-0
cd storytech1
cp -r .git ../storytech
mv storytech storytech2
git clone https://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@github.com/fablemaze/storytech.git
cd storytech
cd ../storytech1
cat .env
/usr/bin/cat .env
git checkout bhoomil_playBtn
git checkout bhoomil_footnote-image-resolution
git branch -a
paru -S sublimt
sudo pacman -S vlc
mpv Screen\ Recording\ 2022-01-04\ at\ 20.29.34.mov
sudo pacman -S epiphanu
sudo pacman -S epiphany
sudo pacman -R dpkg
dpjg
cd /usr/lib/libwebkit2gtk-4.1.so
cat /usr/lib/libwebkit2gtk-4.1.so.0
epiphany -d
epiphany -f
epiphany
sudo pacman -S gPhoto
sudo paru -S gPhoto
cal 2021
cp slips.txt ~/Desktop
nmcli c up 'kashmira'
sudo pacman -Q dpkg
cat .zsh
ls dotfiles
systemctl stop redis
git pull origin rate-limits
git commit -m "ip rate limiter code updated"
systemctl enable redis
systemctl start redis
systemctl status redis
git commit -m "updated code for global limits"
git push origin rate-limits
ssh root@173.249.22.127
sudo pacman -Q mpv
sudo pacman _S mpv
cd ~/.config
cd u
cd ulauncher
mkdir user-themes
git clone https://github.com/S-ci/ReMatch-Dark-Blue-Ulauncher.git
cp ReMatch-Dark-Blue-Ulauncher-main.zip ~/.config/ulauncher/user-themes
cd ~/.config/ulauncher/user-themes
unzip ReMatch-Dark-Blue-Ulauncher-main.zip
alias vsc
alias code
code ReMatch-Dark-Blue-Ulauncher-main ; exit
cd fork-test
touch cmd.js
pov
vim ~/.xinitrc
systemctl disable lightxm
systemctl disable lightdm
lal
codium
cat x.css
rm x.css
ls-la
sudo pacman -S seahorse
npm i -G vue
npm i -G @vue/cli
vue create image-loading
npm i -g pm2
pm2
@vue
npm i -g vite
yarn global add @vue/cli\

npx vue create image-loading
alias vs
vs image-loading
cp big-p.jpg /mnt/programmes/vue/image-loading/src
pm2 ls
paru -S mpv
sudo pacman -R mpv
whereis tree
alias ls
function vs
type vs
which vs
adb
paru -S clipit
sudo pacman -S clipman
cal 2
cal 2022 2
cal 2022
mkdir joid
mov
sudo pacman -S mpv
time zsh
emote --help
whereis emote
which emote
sudo apt install xdotool libgtk-3-dev libgirepository1.0-dev python3-venv gir1.2-keybinder-3.0 libkeybinder-dev\

python --version
 git clone https://github.com/pyenv/pyenv.git ~/.pyenv
pipenv
sudo pacman -S python-gobject gtk3
sudo pacman -S python cairo pkgconf gobject-introspection gtk3
pipenv run
git clone https://github.com/tom-james-watson/Emote.git
cd emo
cd Emote
python3.8
make install
docker volume create mongo 
docker volume create postgres
cd offi
for i in seq 10\
echo $i
for i in $(seq 10)\
echo $i
for i in ls\
echo $i
for i in $(ls)\
echo $i
for i in $(/usr/bin/ls)\
echo $i
python3 -m pip install --user --upgrade pynvim\
\

dmenu
sudo locale-gen "en_US.UTF-8"\

noed
pip3 install bs4 --user
cal +2
cal --1
cal -1
cal -2
cal --2
man cal
sudo dmidecode
sudo dmidecode | grep lenovo
sudo dmidecode | grep Version | sed -n '2p'\
\

mkdir /mnt/data/flutter
cd /mnt/data/flutter
which flutter
whereis flutter
cd /mnt/programmes/vue
npm init vue
cd vue-project
paru -S flatpak
 sudo pacman -S flatpak
flatpak install emoe
flatpak search emote
flatpak install emote
/usr/bin/emote
paru -S bemoji
bemoji
bemoji --help
bemoji e
paru -S emoji-cli-git
emoji-cli
emoji-cli-git
whereis emoji-cli-git
cd /mnt/programmes/flutter
flutter create tic-tac-toe
flutter create tictactoe
cd tictactoe
flutter run android
flutter run --help
flutter run 
flutter run
ping -c 100 google.com
cd /usr/share/fonts/misc
pacman -Qs -- -fonts-\

pacman -Qs -- -fonts-
paru -S emote
paru -S emote -f
echo $srcdir
paru -R emote
/usr/bin/emo
whereis paru
which paru
cd ~/.config/
cat Qtpro
git clone https://aur.archlinux.org/emote.git
cd emote
makepkg 
makepkg --help
makepkg -Csi
makepkg -siC
sudo pacman -S noto-fonts-emoji
mkdir fork-test
vs fork-test
cd tailwind
mkdir fb-clone
vs fb-clone
touch index.css
sxiv fb_logo.svg
npm install -D tailwindcss postcss autoprefixer\
npx tailwindcss init
npx tailwindcss init =p
npx tailwindcss init -p
yarn add vite
cat package-lock.json
mkdir nextjs
cd nextjs
rm -rf superheros
npx create-next-app superheros
cd superheros
mkdir models
touch models/SuperHero.js
mogno
docker container start mogno
alias mongo
ks
touch db/db-connect.js
defaults delete -g ApplePressAndHoldEnabled
cal -n 12
mongos
opera
sudo pacman -S cmatrox
sudo pacman -S cmatroc
sudo pacman -S cmatric
sudo pacman -S cmatrix
docker container stop mongodb
rm -rf sequelize-typescritp
mkdir mongoose-type
cd mongoose-type
yarn add express mongoose
npm install --save-dev eslint
npm run lint -- --fix\

npx eslint --fix
mkdir hospitals
npm install --save-dev ts-node nodemon
yd @types/express@4.17.1
node dist/app.js
cd /mnt/pro
npm init nuxt
nd
alias nd
alias | grep npm
alacritty --workingDir .
alacritty --working-directory .
mkdir layouts
ping www.epfinfia.gov.in
ping epfinfia.gov.in
ping epfinfia.gov
ping epfindia.gov
cd vue
code image-loading
ping epfindia.gov.in
cd /usr/share/code
cat /usr/share/code
cat /usr/share/man/man/code.n.gz
cd /opt/visual-studio-code/bin/code
sudo chown -R ${whoami} /opt/visual-studio-code/bin/cod
sudo chown -R ${whoami} /opt/visual-studio-code/bin/code
sudo chown -R ${whoami} /opt/visual-studio-code/bin/code/
sudo chown -R ${whoami} /opt/visual-studio-code/bin/code\

sudo chown -R "${whoami}" /opt/visual-studio-code/bin/code\

sudo code
sudo code --user-data-dir /home/bhumit070/Desktop
who code
which code
whereis code
sxiv code.png
cd /mnt/data/seriesss
cd anime/series/one\ piece
cd 970-âƒ¹¾âƒ¹¾
cd /mnt/programmes/hospitals
rm -rf hospitals
npm init nuxt-app hospitals
bluetooth
file /etc/systemd/system/pulseaudio.service\

file /etc/systemd/system/pulseaudio.service
pacman -Qo /usr/lib/systemd/system/pulseaudio.service
sudo systemctl restart bluetooth\

systemctl status bluetooth
hcitool de
hcitool dev
telegram
dash
bash .
bash $(pwd)
cd Telegram\ Desktop
mpv .
mpv \[S-1\]\ \[Ep-06\]\ Love\ and\ Lies\(Anime\ Clan\).mkv
ping telegram
ping telegram.org
nvm use 
nvm use 14
wget https://www2.kickassanime.ro/anime/koi-to-uso-love-and-lies-632646/episode-06-856969
cat episode-06-856969
$WORKSPACE_NUM
$"WORKSPACE_NUM"
echo "$WORKSPACE_NUM"
$(wmctrl -d | grep \* | cut -d' ' -f1)
echo $(wmctrl -d | grep \* | cut -d' ' -f1)
wmctrl
wmctrl -d
wmctrl -d | cut -d' ' -f1
wmctrl -d | grep \* | cut -d' ' -f1
cd hospitals
vs hospitals
lsb_release
lsb_release -a
uname
uname =t
uname -r
sudo pacman -S virtualbox
vue 
npm i -g @vue/cli
vue --version
vue migeate
vue migrate
cd /mnt/programmes/hospitals/hospitals/o
cd /mnt/programmes/hospitals/hospitals/
vue config
vue init 
vue
vue info
vue ui
adb devices
npm i -g vorlon\

M
npm i -g vorlon
verlon
vorlon
ping footy.eu
npm install -g weinre
weinre --boundHost -all-\

php -i | grep php.ini
ping api.footy.eu
mkdir prisma
curl -L https://pris.ly/quickstart | tar -xz --strip=2 quickstart-main/typescript/starter
cd starter
mpv
npm i -g express-draft
exp prisma-demo
vs prisma-demo
git commit -m "init prisma demo"
npm i -D prisma
npm i @prisma/client
dockerKillAndRemoveContainer postgres
docker volume remove 35
docker volume remove 35c5
docker volume remove 35c5a
docker volume remove 35c5a4
docker volume remove 35c5a4a919e178eb77d9a8e14171cfd9b47ad0b3a17039dee7a131781f3dc447
docker volume remove 96089a66816efe1aa05ce8c13e5af894fb4fff589f95ee4cfe99674fe4f9544e
git add.
git commit -m "fixed typo in postgres command"
docker container stop postgres
postgresstop
docker volume remove 4457ea38d88abb1f85e7e38e2588d120bef495b3a01766d5af180b897da8f5be
docker volume remove c67df6d8c3388226d393db92a25700c46f74b7cdcc8f647577ddf1fd7ad5ab95
vim ~/.zshrc
cd /home/bhumit070/dotfiles
source .zsh
git commit -m "Added prisma"
npx gitignore
git commit -m "init & prisma add"
dockerKillAndRemoveContainer mysl
dockerKillAndRemoveContainer mysql
npx prisma migrate dev
git commit -m "added migrations"
git commit -m 'created crudh with product'
git commit -m "create schema for prisma"
npx prisma studio
alias -
-
- alias
- zrc
echo $ZSH_THEME_DIR
cd $ZSH_THEME_DIR
cat .p10k.zsh
p10k 
p10k display
p10k display print
p10k print
p10k help
p10k help reload
p10k help segment
typeset
zsh --version
zsh -v
cd /mnt/programmes/prisma
cd prisma-demo
touch .nvm
vim .nvm
reloadp10k
cd /mnt/programmes/prisma/prisma-demo
code .p10k.zsh
bash (pwd)
bash 3
ls la *.pem
chmod 400 footy-hasura-staging.pem
ssh ubuntu@ec2-3-120-192-67.eu-central-1.compute.amazonaws.com
mkdir office-work
cd office-work
docker 
sudo pacman -S docker-compose
mkdir footy
cp docker-compose.yaml footy
vs footy
docker compose
docker-compose
docker-compose up
touch Caddyfile
docker volume create hasura-footy-v2_db_data
unzip league-manager-master.zip
cd league-manager-master
ssh -i "footy-hasura-staging.pem" ubuntu@ec2-18-196-155-140.eu-central-1.compute.amazonaws.com
chmod 400 footy-hasura-production.pem
ls -la *.pem
touch insstance-details.md
yarn && yarn serve
pkill 8000
pkill 8080
pkill -k 8080
fuser -k 8080/tcp
ssh -i "footy-hasura-production.pem" ubuntu@ec2-3-120-192-67.eu-central-1.compute.amazonaws.com
cd /mnt/programmes/hasura/footy
yarn 
yarn serve
flameshot --gui
flameshot --help
flameshot gui
npx fireship-quiz
mkdir electron
cd /mnt/programmes/electron
npx create-electron-app docker-desktop
vs docker-desktop
touch src/render.js
npm run satrt
mkdir full-stack
tr
sudo pacman -S tree
tree .
tree --help
tree --help | grep ignore
tree . --igonre node_modules
tree . --igonre-case node_modules
paru -S wine-stable
yarn add doten
yarn add -D prisma
yarn add @prisma/client
cd pro-backend
npx prisma init 
npx prisma generate
cd asana
cd StakeCube-Backend
ping -c 10 google.com\
ping -c 10 google.com
thunar 
cd full-stack
cd full-stack/chat
npx express-generator-typescript\

sudo chown "$USER":"$USER" /home/"$USER"/.docker -R\

mv express-gen-ts app
touch tsconfig.json
yarn add -D typescript
rm -rf .eslintrc.js
yarn add -D eslint
rm -rf package-lock.json
yarn add --dev nodemon ts-node\

touch nodemon.json
npx prisma init
git commit -m "init"
xe
ex
alias ex
yarn aadd dotenv
nodemon server.ts
ping -c 10 google.com
docker container stop 7cea35e31930
alias di
alias dci
rmi
alias  | grep docker
cd do
sudo pacman -S ngixn
sudo pacman -S ngginx
ddi -f
dpsdps
cd .docker
rm -rf config.json
exa -la
postgres & mongo & mysql
cd /usr/share/nginx
ls | grep nginx
sudo chown "$USER":"$USER" nginx
sudo chown "$USER":"$USER" .
nginx -v
sudo systemctl status nginx
nginx reload 
nginx --help
nginx -g
nginx -h
nginx -T
sudo nginx -T
vim nginx.conf 
mkdir conf.d
nvim nginx.conf 
cd conf.d/
vim first.conf
nvim first.conf
startx
systemctl status wi-fi
systemctl status wifi
systemctl status networkmanager
systemctl status NetworkManager
systemctl status lightdm
systemctl enable lightdm
cat .yarn
cd create-vite
cat create-vite 
nmcli
sudo wpa_cli -i wlan0
nmcli show
nmcli -a
nmcli --help
m,cli -p
nmcli -p
nmcli d
sudo lsusb
sudo lspci
sudo lshw -C network
lshw
journalctl -n 1000 -u NetworkManger -u wpa_supplicant
nmcli gen lon level debug
nmcli gen log level debug
sudo nmcli gen log level debug
iw
iw wlan0 scan
sudo systemctl enable wpa_supplicant
systemctl status wpa_supplicant
nmcli 
rfkill list
nmcli radio
nmcli radio wifi on
paru -S certbot
whereis certbot
sudo pacman -S python3-certbot-nginx
paru -S python3-certbot-nginx
paru -S certbot-nginx
sudo certbot --nginx
cd /etc/nginx/n
cat first.conf
cd ls
chmod -r "$USER:$USER" nginx
sudo chmod -r "$USER:$USER" nginx
sudo chmod "$USER:$USER" -i nginx
sudo chmod "$USER:$USER" -r nginx
chmod 777 nginx
sudo chmod 777 nginx
cd prisma
cd test-nginx
npm i && node servers.js
cat servers.js
vim servers.js
rm -rf chat
npm i -g typeorm
typeorm
typeorm init
cp * backend
cp -r * backend
vs backend
yarn add sequelize
yarn add @types/sequelize
yarn add -D @types/node @types/validator
npm uninstall mysql && npm i mysql
npm uninstall mysql && npm i mysql2
yarn add -D typescript ts-node nodemon
yarn add @types/express
yarn -d add @types/express
yarn  add -d @types/express
yarn  add -D @types/express
cd /mnt/no
mkdir sequelize-typescritp
cd sequelize-typescritp
yarn add -D typescript ts-node @types/express @types/node\

npm install -g sequelize-cli sequelize\

mkdir src/db
mkdir src/api
mkdir src/db/models
cd /mnt/programmes/full-stack
ls -l
docker pull phpmyadmin/phpmyadmin
docker volume remove 62dd
docker volume remove 62dd9
docker volume remove 62dd90
docker volume remove 62dd9036
docker volume remove 62dd9036a92ae51a041a2f9f1f697db88b6943e2c52258eb9478f6eb5fe26ee4
docker volume remove 578bdcbc363a5cf06aa59a7d2c4f374850feb419069ee000eaf26ac15bfe0850
docker run --name phpmyadmin -d --link mysql:db -p 8080:80 phpmyadmin
docker run --name phpmyadmin --link mysql:db -p 8080:80 phpmyadmin
cd dotfiles/
cat docker
vim docker
paru -R slack-desktop
docker container start phpm
- 
cd /etc/nginx/
mkdir sites-enabled
cd sites-enabled
vim phpmyadmin
cd /var/www/html
certbot --nginx
certbot --nginx -v
mkdir caddy
cd caddy
caddy reverse-proxy --from :8080 --to 127.0.0.1:9000
caddy reverse-proxy --from :2016 --to 127.0.0.1:8080
caddy reverse-proxy --from /phpmyadmin --to 127.0.0.1:8080
caddy reverse-proxy --from http://codingmachine/phpmyadmin --to 127.0.0.1:8080
caddy reverse-proxy --from :80 --to 127.0.0.1:8080
sudo pacman -S caddy
mkdir /etc/systemd/system/nginx.service.d\

sudo mkdir /etc/systemd/system/nginx.service.d\

printf "[Service]\nExecStartPost=/bin/sleep 0.1\n" > /etc/systemd/system/nginx.service.d/override.conf
sudo printf "[Service]\nExecStartPost=/bin/sleep 0.1\n" > /etc/systemd/system/nginx.service.d/override.conf
vim /etc/systemd/system/nginx.service.d/override.conf
sudo nvim /etc/systemd/system/nginx.service.d/override.conf
systemctl daemon-reload\

ExecStopPost=/bin/rm -f /run/nginx.pid\

sudo touch phpmyadmin.conf
mkdir revamping
systemctl stop nginx
sudo ufw status
rnt
touch server.ts
yarn add express dotenv
yarn add -D nodemon
yarn add -D typescript ts-node @types/express @types/node
yarn edv
docker container start phpmyadmin
systemctl status caddy
sudo pacman -R nginx
yarn add mongoos
git clone https://github.com/luixaviles/node-typescript-app.git
cd node-typescript-app
dpkg
dps -a
for i in $(dps -q)\
echo $i
for i in $(dps -q)\
docker container start $i
cd revamping
npx tsc
node dist/server.js
while true\
do\
echo "done"\
sleep 3s\
done
while true\
do\
echo "$whoami"\
sleep 3s\
done
echo "$whoami'\
"
echo "$whoami"
echo "I am $whoami"
echo "I am $(whoami)"
--login -i
ssh | grep i
ssh | grep -i
dps -q
ping chaku.com
dmenu_run
seq 10 | dmenu_run
seq 10 | dmenu
dps -q | dmenu
container="$(dps -q | dmenu)" && echo $container
container="$(dps -q | dmenu)" && echo "selected $(container)"
container="$(dps -q | dmenu)" && echo "selected $container"
nodemon src/index.ts
nodemon src/server.ts
node test.js
vim test.js
rm -rf test.js
dbus_args
mkdir typescript
vs typescript
npm i -g hasura
snox
curl -L https://github.com/hasura/graphql-engine/raw/stable/cli/get.sh | bash\

cd first
hasura init
hasura console
docker image s
docker container start hasura/graphql-engine
docker run hasura/graphql-engine
cd /mnt/programmes/hasura/test-demo
cd /mnt/programmes/hasura
cat config.yaml
wget https://raw.githubusercontent.com/hasura/graphql-engine/stable/install-manifests/docker-compose/docker-compose.yaml\

mkdir gitlab
cd gitlab
ssh-keygen -t rsa -b 2048 -C "gitlab ssh keys"
eval $(ssh-agent -s)\

ssh-add /mnt/data/ssh-keys/gitlab/gitlab_rsa
cat ~/.ssh/con
cd /home/bhumit070/.ssh
cat known_hosts.old
vim config
cat gitlab_rsa
cat gitlab_rsa.pub
code .
cp .zshrc /home/bhumit070
git commit -m "more modularize .zshrc file"
git commit -m "history"
git commit -m "testing ssh keys"
git remote remove origin
git remote add origin git@gitlab.com:bhumit070/dotfiles.git
cd /mnt/de
cd /mnt/desk
git clone git@github.com:bhumit070/pro-backend-store.git
rm -rf pro-backend-store
cd .ssh
ssh-keygen -t rsa -t 2048 -c "Github Keys"
ssh-keygen -t rsa -t 2048 -C "Github Keys"
cat ~/.zsh_history
ssh-add ./github
code ~/.ssh/config
/usr/bin/cat github.pub
cd test-demo
git commit -m "init hasura"
hasura migrate create
hasura migrate --help
hasura migrate create "init" --from-server --database-name Test
hasura migrate create "user table" --from-server --database-name Test
hasura migrate apply
hasura migrate
hasura migrate status
echo $PUBLIC_PORT
alias docke
mkdir ~/iPhone
sudo pacman -S libimobiledevice ifuse usbmuxd
ifuse --help
sudo pacman -S usbmuxd libimobiledevice6 libimobiledevice-utils
sudo pacman -Sy ifuse usbmuxd libplist libimobiledevice\

sudo dmesg | grep -i iphone\

sudo reboot
cd /mnt/data/app
ls | grep app
cd apps
git clone https://github.com/schultetwin1/DesktopANCS.git
cd DesktopANCS
mke
bluetoothctl
cd re-install
cat pp.jpg
sxiv pp.jpg
dmesg | grep -i iphone\

cd /mnt/data/apps
git clone https://github.com/pzmarzly/ancs4linux\

sudo ./ancs4linux/autorun/install.sh\

systemctl --user daemon-reload\

systemctl --user start ancs4linux-desktop-integration.service\

address=$(ancs4linux-ctl get-all-hci | jq -r '.[0]')\

dstart pphmyadmin
touch test.sol
./bin/Lottery.bin
cd /mnt/programmes/\#Tutorials
cd solidity
mpv Solidity\ Full\ Course\ -\ 4\ hours\ _\ Solidity\ Latest\ Version\ _\ Master\ Solidity\ _\ Hindi\ _\ Code\ Eater.mp4.crdownload
echo $(ls)
echo $(ls) | less
mkdir seq-ts-demo
cd seq-ts-demo
npm i -D typescript @types/node ts-node ts-node-dev
dstart mysql
npm i express dotenv sequelize pg pg-hstore ; exit
npm i express dotenv mysql2
npm i sequelize-cli -D
npx sequelize-cli --init
 npm i sequelize
rm -rf config migrations models
rm -rf seeders
npx sequelize-cli init
touch index.ts
npm i -D @types/express
time -c
man time
time %S
time -s
ssh -Q github
docker pull dpage/pgadmin4
myslq
docker volume remove e553f19d29592e76f8bdbd56de55f654a758bef6e4d10f7606c04cf587fe89ae
docker volume create pgadmin
alias pgadamin
docker inspect postgres
posdps
git commit -m "added pgadmin & phpmyadmin docker containers"
mkdir setup
code setup
chmod +x docker.sh
docker -v
./docker.sh 
zh
ls /usr/bin/docker
npm run dev
dstart phpmyadmin
dstart pgadmin
dstart postgres
mongo localhost:27017
caddy
cd /mnt/programmes/node/seq-ts-demo
cat captcha.js
node captcha.js
nmcli scan
nmcli c
nmcli d connect 'bhumit070'
nmcli d connect wifi 'bhumit070'
nmcli d wifi connect bhumit070
alias ddv
docker ps -a -q
docker container stop mysql
mysqlstart
mysqlss
docker container start mysql
dockerKillAndRemoveContainer phpmyadmin
docker run --name phpmyadmin --link mysqle:db -p 8080:80 phpmyadmin
docker container logs phpmyadmin
docker container logs mysql
docker container logs mysqle
docker run --name mysqle -e MYSQL_USER=bhumit070 -e MYSQL_PASSWORD=bhumit070  -p 3307:3306 mysql
dockerKillAndRemoveContainer mysqle
docker run --name mysqle -e MYSQL_USER=bhumit070 -e MYSQL_PASSWORD=bhumit070 -e MYSQL_ROOT_PASSWORD=bhumit070  -p 3307:3306 mysql
docker volume remove 9ad0239edc44c6971add13b3bab89ebcb9a3c69eadef669c2676ff8f156a24cb
docker container inspect postgres | grep ip
docker container inspect postgres | grep Ip
docker container inspect postgres | grep IpAddress
docker container inspect postgres | grep IpAddress*
docker container inspect postgres | grep
docker container inspect postgres
docker container inspect postgres > info.json
code info.json
rm info.json
ping ok.com
ls package.json
local arrat
local array
env | SSH_AGENT_PID
localhost
robo3t
cat .git
cd .git
paru -S robo3t
paru -S robo3t-bin
bat
docker image remove footy_caddy_certs
docker image rn footy_caddy_certs
docker image rm footy_caddy_certs
docker image rm hasura/graphql-engine hasura/graphql-engine
docker image rm hasura/graphql-engine
docker rmi "containrrr/watchtower"
docker rmi "hasura/graphql-engine"
docker rmi hasura/graphql-engine
docker rmi 313112112bd3
cd chat/backend
mkdir chat
alias ya
ya express socket.io uuid
mkdir sec 
rm sec
rm -rf sec
yd @types/uuid
npx create-nuxt-app frontend
ya nuxt-socket-io\

yd typescript
npx tsc init
touch src/server.ts
ya cors
figlet "pl"
figlet "Happy Birthday"
figlet "Happy Birthday Jota"
figlet "Happy Birthday Bhoomit"
figlet "\t Happy Birthday Bhoomit"
figlet "/\t Happy Birthday Bhoomit"
figlet "Happy Birthday Bhoomit \n"
figlet "Happy Birthday Bhoomit n"
figlet
figlet --help
figlet -w 10 "Bhoomit"
figlet -w 100 "Bhoomit"
cat dotfiles/.zsh_history| grep cowsay
sudo pacman -S cowsay
cowsay -e "ðƒ¿ƒ¸ƒ­ðƒ¿ƒ¸ƒ­" "ok"
cowsay "bhu"
p10k reload
p10k
sudo
p10k configure
zsh -i -c
zsh -i -c exit
zsh -c echo 'done'
zsh -i
cd /mnt/data/seriesss/anime/series/one\ piece/970-âƒ¹¾âƒ¹¾
alias dd
dd
rm -rf seriesss
dip
ping localhos
sudo pacman -S nginx
systemctl enabble --now nginx
systemctl enable --now nginx
nginx 0t
sudo systemctl enable nginx
battery -w
localcat
sudo pacman -Sy
sudo pacman -S lolcat
lolcat ls
lolcat tsconfig.json
lolcat "bhumit"
git clone https://github.com/xreider/nuxt-express-boilerplate.git
vs nuxt-express-boilerplate
rm package-lock.json
rm -rf nuxt-express-boilerplate
cd frontend
lolcat 
figlet -w 00 "Bhoomit"
figlet -w 1 "Bhoomit"
figlet -w 0.5 "Bhoomit"
figlet "Bhoomit"
integer
integer 34
integer status
windows
window
neofetch | grep up
neofetch
/usr/bin/time
whereis time
which time
cat .bashrc
free -mh
mkdir -p anime/conan
cd anime/kon
cd anime/conan
rsync -h
rsync
alias rbt
free
free -h
free -m
free -mh\
free -mh
mv *.mp4 /mnt/data/anime/conan
dc ../
rm -rf drive-download-20220206T161612Z-001\ \(1\)
cp drive-download-20220206T161612Z-001\ \(1\).zip /mnt/data/anime/conan
rm drive-download-20220206T161612Z-001\ \(1\).zip
thunar . & ok
#!/bin/bash
# ~/.xinitrc
#
# Executed by startx (run your window manager from here)
userresources=$HOME/.Xresources
usermodmap=$HOME/.Xmodmap
sysresources=/etc/X11/xinit/.Xresources
sysmodmap=/etc/X11/xinit/.Xmodmap
SESSION=${1:-xfce-session}
# merge in defaults and keymaps
if [ -f $sysresources ]; then     xrdb -merge $sysresources; fi
if [ -f $sysmodmap ]; then     xmodmap $sysmodmap; fi
if [ -f "$userresources" ]; then     xrdb -merge "$userresources"; fi
if [ -f "$usermodmap" ]; then     xmodmap "$usermodmap"; fi
# start some nice programs
if [ -d /etc/X11/xinit/xinitrc.d ] ; then     for f in /etc/X11/xinit/xinitrc.d/?*.sh ; do         [ -x "$f" ] && . "$f";     done;     unset f; fi
exec xfce4-session
cd Music
./.Xclients
cd Videos
cd AnyDesk
rm AnyDesk
rm -f AnyDesk
rm -r AnyDesk
cd .yarn
cat create-vite
code x.js
time node x.js
pfo
ping localhost:8080
nginx
local | grep n
local | grep docker
cd /home/bhumit070
env | grep SSH_AGENT_PID
ssh -!
ssh -Q
ssh -b
ssh
whereis r
where r
which r
which $(USER)
which $USER
whoo
who | awk $(print $1)
man awk
who | awk -f $(print $1)
who | awk -f '{ print $1 }'
who | awk '{ print $1 }'
who | awk '{ print $2 }'
sdp
vim .vuerc
get_session(){ 	local dbus_args=(--sh-syntax --exit-with-session); 	case "$1" in 		awesome) dbus_args+=(awesome) ;; 		bspwm) dbus_args+=(bspwm-session) ;; 		budgie) dbus_args+=(budgie-desktop) ;; 		cinnamon) dbus_args+=(cinnamon-session) ;; 		deepin) dbus_args+=(startdde) ;; 		enlightenment) dbus_args+=(enlightenment_start) ;; 		fluxbox) dbus_args+=(startfluxbox) ;; 		gnome) dbus_args+=(gnome-session) ;; 		i3|i3wm) dbus_args+=(i3 --shmlog-size 0) ;; 		jwm) dbus_args+=(jwm) ;; 		kde) dbus_args+=(startplasma-x11) ;; 		lxde) dbus_args+=(startlxde) ;; 		lxqt) dbus_args+=(lxqt-session) ;; 		mate) dbus_args+=(mate-session) ;; 		xfce) dbus_args+=(xfce4-session) ;; 		openbox) dbus_args+=(openbox-session) ;; 		*) dbus_args+=("$1") ;; 	esac 	echo "dbus-launch ${dbus_args[*]}"; }
poweroff -i
nmcli c up 'iPhone 12'
alias pof
thumar
rust
rustc
touch main.r
mv main.r main.rs
vim main.rs
rustc main.rs
./main 
hasura
hasura completion
cd .hasura
cd config.json
cat config.json
\cd plugins
cd bin
rm -rf bin
ping test.fixline.com
paru -S openoffice-bin
cat
oper
brav
cat .xsession-errors
ping code.com
ping crypto.com
pip install Rich\

mkdir linkedin.js
mkdir linkedin
cd linkedin
brave google.com
brave bhoomit ganatra
brave --incognito
brave --incognito google.com
brave --incognito https://www.google.com/search?q=bhoomit+ganatra+incipient+info+%3Alinkedin
touch linkedin.js
npm init -y
node linkedin.js
node linkedin.js | dmenu
node linkedin.js | awk $1
node linkedin.js | awk '{ print $1 }'
node linkedin.js | awk '{ print $4 }'
node linkedin.js | awk '{ brave --incognito $4 }'
chmod +x urls.sh
which okdf
bashLocation="$(which okdf)"
echo $bashLocation
whereis bash
which bash
/bin/bash
brave --incognito 'https://www.google.com/search?q=bhoomit+ganatra+incipient+info+%3Alinkedin'
sudo pacman -S opera
cd pa
las
cd Public/b
node linkedin.js > urls.sh
./urls.sh
echo "${XDG_CACHE_HOME:-$HOME/.cache}"
cd /home/bhumit070/.ca
cd /home/bhumit070/.cache
cd p10k-instant-prompt-bhumit070.zsh
docker volume remove footy_caddy_certs
git commit -m "remove some unknown volume in setup '\
"
git commit -m "docker setup files"
git push -
sudo pacman -sS java | grep jre
sudo pacman -S jre-openjdk
 sudo pacman -sS java | grep jdk
 sudo pacman -S jdk-openjdk
sudo pacman -S webstrom
which webstrom
midori
sudo java --version
echo $JAVA_HOME
which java
cd /usr/local/
java -v
java -version
java
java c
javac
ls 
cd iPhone
rm iPhone
rm -rf iPhone
sudo pacman -R java
paru -R java
paru -S java
paru -S jdk
java --version
paru -R webstrom
paru -R webstorm
paru -S webstrom
paru -S webstorm
chmod +x test.sh
./test.sh
rm test.sh
vim test.sh
cat .zcompdump
ash
as
alias as
time ls
time ls -lah
/usr/bin/ls -lah
time /usr/bin/ls -lah
tsc
paru -S go
go en
go env
go env | dmenu
ping nginx.com
wget https://gitlab.com/bhumit070/dotfiles/-/blob/main/mpv.conf
rm mpv.conf
cd /mnt/data/mpv
cat .fuse_hidden0000024900000015
vim mpv.conf
cd .config
cd mpv
cp mpv.conf /home/bhumit070/dotfiles/mpv.conf
git commit -m "modified mpv.conf to save playback position on quit"
gnome-disks
ping https://linkedin.com/feed/
ping linkedin.com/feed/
https://linkedin.com/feed/
ping linkedin.com
ports
cd conf.d
cat conf.d
docker container inspect phpmyadmin
systemctl reload nginx
systemctl restart nginx
sudo systemctl reload nginx
sudo systemctl start nginx
sudo nvim nginx.conf
sudo systemctl restart nginxl
systemctl daemon-reload
sudo systemctl restart nginx
nginx -s reload
sudo nginx -s reload
ping web.whatsapp.com
cal -n
rm x.js
touch x.js
node x.js
cd .xinitrc
cd aliases
bas
cd /home/bhumit070/alias
cd /home/bhumit070/dotfiles/aliases/
cat docker 
bat docker 
vim .bashrc
basj
cat package
blueman-applet
sudo pacman -S hcitool
paru -S bluez-hcitool
hcitool
hcitool scan
du -h img
git init 
git commit -m "created website"
git remote origin add https://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@github.com/Megh308/elite.git
git remote add origin https://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@github.com/Megh308/elite.git
cat ormconfig.json
docker container inspect mysql
cd .Xclients
cat .Xclients
mkdir sockets
vs sockets
cd x.js
cat x.js
rm main main.rs x.js
rm 2022-02-1_10.png
ls 2022-02-11_10-00.png
cat 2022-02-11_10-00.png
touch dockerignore
docker build --name bhumit070@node-socket .
docker build
docker build --help
docker build -t @bhumit070/socket-build .
docker build .
docker build -t "@bhumit070/socket-build" .
docker container remove socket-demo
docker container stop socket-demo
docker container run --name socket-demo -p 4001:4000 socket-demo
yarn add socket.io
lnode .
node servers.js
which ddc
who ddc
whereis ddc
docker login
cat $HOME/.docker/config.json
docker build -t socket-demo .
ls -lah | less
docker ps --all
ls -la | less
cat /proc/sys/kernel/sysrq
halt
sudo pacman -S blueman
blueman
cd website1
cp ../../website1/* .
cp ../../website1 .
cp -r ../../website1 .
rm website1
rm -r website1
git commit -m "updated styles"
echo "$(HOME)"
echo "$HOME"
echo "$HOME/.zshrc"
cat "$HOME/.zshrc"
nodemon -L
touch script.js
node script.js
bluecli
mkdir group-chat
cd group-chat
mkdir backend
yarn add socket.io express mongoose
yarn add bcrypt ; exit
cd /mnt/programmes/pro-backend
cd s
cd store
yarn add jsonwebtoken
curl https://images.app.goo.gl/vmNEsrfkWvAJ3wUd9
touch group.js user.js
python
la -lah
cat .yarnrc
npm i -g npm
npm i -g yarn
yarn -v
yarn add axios
yarn add nuxt-socket-io
alias dv
alias dc
which dc
yarn remove nuxt-socket-io
vim nuxt.config.js
vim front/nuxt.config.js
yarn add socket.io-client
sudo pacman -S firefox
paru -S steam
set_workspace
set 
wmctrl -i
wmctrl -i -r
workspace
wp
wpa_cli
chmod +x wss.sh
./wss.sh
cat wss.sh
vim spo
vim wss.sh
./wss.sh spotify 1
mv wss.sh open.sh
sudo cp open.sh /usr/bin/open
open
open spotify 1
rm -rf front/mixins
yarn remove date-fns
yarn add date-fns
wget https://instagram.famd6-1.fna.fbcdn.net/v/t51.2885-15/e35/s1080x1080/273853416_524335982253921_2292627886312950239_n.webp.jpg?_nc_ht=instagram.famd6-1.fna.fbcdn.net&_nc_cat=109&_nc_ohc=q_DcOSwOAqwAX-C-zZi&edm=ALQROFkBAAAA&ccb=7-4&ig_cache_key=Mjc3MjY3Mjc1MTcyODY3MTM5Ng%3D%3D.2-ccb7-4&oh=00_AT8E35X0Fvhi8Pl5lk_LsBvBZFvUCHjjwT7WhPwTsb3GxA&oe=62190F89&_nc_sid=30a2ef 1080w,https://instagram.famd6-1.fna.fbcdn.net/v/t51.2885-15/sh0.08/e35/s750x750/273853416_524335982253921_2292627886312950239_n.webp.jpg?_nc_ht=instagram.famd6-1.fna.fbcdn.net&_nc_cat=109&_nc_ohc=q_DcOSwOAqwAX-C-zZi&edm=ALQROFkBAAAA&ccb=7-4&ig_cache_key=Mjc3MjY3Mjc1MTcyODY3MTM5Ng%3D%3D.2-ccb7-4&oh=00_AT-ptmY3OMV1grQwS06O81AV07gnp444WhFxnA88IjJWrA&oe=62193DB7&_nc_sid=30a2ef 750w,https://instagram.famd6-1.fna.fbcdn.net/v/t51.2885-15/sh0.08/e35/s640x640/273853416_524335982253921_2292627886312950239_n.webp.jpg?_nc_ht=instagram.famd6-1.fna.fbcdn.net&_nc_cat=109&_nc_ohc=q_DcOSwOAqwAX-C-zZi&edm=ALQROFkBAAAA&ccb=7-4&ig_cache_key=Mjc3MjY3Mjc1MTcyODY3MTM5Ng%3D%3D.2-ccb7-4&oh=00_AT8RZbouPxcw6M5m9lK1a7yOM-h65PVMmB7w3a9ag-QG9w&oe=62185882&_nc_sid=30a2ef 640w,https://instagram.famd6-1.fna.fbcdn.net/v/t51.2885-15/e35/s480x480/273853416_524335982253921_2292627886312950239_n.webp.jpg?_nc_ht=instagram.famd6-1.fna.fbcdn.net&_nc_cat=109&_nc_ohc=q_DcOSwOAqwAX-C-zZi&edm=ALQROFkBAAAA&ccb=7-4&ig_cache_key=Mjc3MjY3Mjc1MTcyODY3MTM5Ng%3D%3D.2-ccb7-4&oh=00_AT9cD0TGA0FB99DpJW9R7NB56-q4mi9Qb6VJWCvbVXJE5g&oe=6218121C&_nc_sid=30a2ef 480w,https://instagram.famd6-1.fna.fbcdn.net/v/t51.2885-15/e35/s320x320/273853416_524335982253921_2292627886312950239_n.webp.jpg?_nc_ht=instagram.famd6-1.fna.fbcdn.net&_nc_cat=109&_nc_ohc=q_DcOSwOAqwAX-C-zZi&edm=ALQROFkBAAAA&ccb=7-4&ig_cache_key=Mjc3MjY3Mjc1MTcyODY3MTM5Ng%3D%3D.2-ccb7-4&oh=00_AT_Ddwnw1QYXiOZKJow86T7cHmlO9wcWYBzM89k1rNWkmQ&oe=62185E30&_nc_sid=30a2ef 320w,https://instagram.famd6-1.fna.fbcdn.net/v/t51.2885-15/e35/s240x240/273853416_524335982253921_2292627886312950239_n.webp.jpg?_nc_ht=instagram.famd6-1.fna.fbcdn.net&_nc_cat=109&_nc_ohc=q_DcOSwOAqwAX-C-zZi&edm=ALQROFkBAAAA&ccb=7-4&ig_cache_key=Mjc3MjY3Mjc1MTcyODY3MTM5Ng%3D%3D.2-ccb7-4&oh=00_AT-3_Kde_zyDx4MP_8JILUaao3VVoIbc38FEYMkAlJ0wyw&oe=62191C5C&_nc_sid=30a2ef 240w
cd /mnt/data/ssh-keys
cp github github_rsa
cd /mnt/data/ssh-keys/git
cd /mnt/data/ssh-keys/gitlab
mkdir Baartalap
cd Baartalap
git@github.com:SandipDhang/Baartalap.git
git clone git@github.com:SandipDhang/Baartalap.git
cd /mnt/programmes/Baartalap
git clone git@github.com:SandipDhang/Baartalap-backend.git
docker container start mongodb
cd Baartalap & npm i & cd ../ & cd Baartalap-backend & npm i
cd Baartalap && npm i 
yarn star
cd Baartalap-backend && npm i
cd front && yarn dev
cp front/.gitignore .gitignore
git commit -m "created some basic chat app"
git commit -m "play audio when notification comes"
git commit -m "add db url to .env file"
mv front ../
git commit -m 'removed frontned'
vs ../
git commit -m "added dotenv"
vs front
cd /mnt/data/con
thunar & exit
cd ~/.config/mpv
cat mpv.conf
pon
alias pon
which pon
who pon
pon google.com
cat tsconfig.json
rm tsconfig.json
rm -rf ormconfig.json
cat .v
paru -S microsoft-edge-stable-bin
go
go main.go
vs main.go
vim index.html
docker cp index.html nginx:/usr/share/nginx/html
docker commit nginx
dls
docker commit 
docker commit --help
docker commit -t nginx-custom-index nginx
docker commit nginx custom-nginx-image
docker container run -p 3000:80  custom-nginx-image
lsl
docker container run nginx
docker container commit modest_lumiere -m "first commit" modest_ok
docker container commit -m "first commit"  modest_lumiere  modest_ok
docker imag els
docker image inspect modest_ok
if true\
echo "true"\
fi
if true; then\
echo "true"\
fi
local | grep zsh
/usr/bin/ifstat
rm -rf src
rm package.json package-lock.json 
ok
docker network rm footy_default
cd ..
idn
docker pull nginx
dp
docker container start --name nginx -p 80:80 nginx
docker container stop nginx
docker container start nginx
docker container run --name nginx -p 80:80 nginx
docker cp index.html nginx
docker cp index.html nginx:
docker cp index.html nginx:/
docker container exec -it nginx zsh
docker container exec -it nginx bash
docker attach modest_lumiere
docker container start modest_lumiere
docker container attach modest_lumiere
cd /mnt/programmes/node/group-chat
yarn || npm i -g yarn
yarn -v || npm i -g yarn
curl -v http://localhost:5000
curl -v http://localhost:5000/signup
curl -v http://localhost:5000/signin -m "POST"
docker container exec -it socket-group-chat bash
docker container exec -it vigorous_hawking bash
docker container start -p 5000:5000 socket-group-chat
docker container run -p 5000:5000 socket-group-chat
docker container run -p 5000:5000 --name sgc socket-group-chat
pacmn
webstrom
webstorm
whereis java
/usr/bin/java com.company.Main
/usr/share/java com.company.Main
sudo /usr/share/java com.company.Main
/usr/lib/jvm/java-8-openjdk/jre/bin/java com.company.Main
docker container inspect sgc
docker container inspect sgc | grep volumes
touch Dockerfile
touch .dockerignore
docker build -t socket-group-chat .
docker container ls
cd bhumit070
nmcli d wifi list
po
curl https://www.youtube.com/watch?v=8pWA7jsdha8
curl -v https://www.youtube.com/watch?v=8pWA7jsdha8
curl  www.youtube.com/watch?v=8pWA7jsdha8
curl  www.youtube.com
ping microsoft.in
ping microsoft.com
ping github.com
cat $HOME/dotfiles/zsh/configs/autoload
echo $HISTFILE
cd .zshrc
git commit -m "Added option to remove duplicates in .zsh_history file"
git remote -v\
git remote -v
git diff .zsh_history
cd zsh
cd configs
vim autoload
mkdir op
vs op
touch index.html index.js
mkdir cluser-ok
vs cluser-ok
touch index.json
npm i -g loadtest
loadtest -n 1000 -c 100 http://localhost:4000
loadtest -n 1000 -c 1000 http://localhost:400
loadtest -n 10000 -c 1000 http://localhost:400
loadtest -n 10000 -c 100 http://localhost:400
loadtest -n 10000 -c 100 http://localhost:4000
sudo pacman -S libxcrypt-compact
paru -S libxcrypt-compact
paru -S libxcrypt-compat
docker container commiy
docker container commit
ping localohst
cat paru
cat .SRCINFO
os.
local
Infinity
go 
mkdir ...
cd ....
cd ...
go mod init
go mod init github.com/demo
touch main.go
go run main
cd yt-hitesh
cd conversion
cd dssdf
rm -r dssdf
docker volume inspect mysql
cd cli-plugins
sudo pacman -Syu\

sudo pacman -S wine\

sudo pacman -S winetricks\

sudo pacman -S wine-mono wine_gecko\

wine-tricks
wine 
wine --hel
wine WhatsAppSetup.exe 
sudo wine WhatsAppSetup.exe 
mkdir streams
cd streams
cat package.json >> some.txt
for i in 10\
cat package.json >> some.txt
node inspect index.js
docker volume list
docker image
docker image inspect 
docker image inspect node_modules
docker image inspect mysql
cd _data/
cat auto.cnf 
cd vfs/
cat repositories.json 
cd distribution/
cd image/
cd overlay2/l
cd overlay2/
exa -lah
exa -lah | grep d1dc36cf8d9e
cat f85cfaac028e3ed8554fb10930006a86232a71875551adb4e7699799da2b2287/
cd f85cfaac028e3ed8554fb10930006a86232a71875551adb4e7699799da2b2287/
cd com
cat committed 
cat link 
cat lower 
cd work/
cd diff/
cd usr/
cd local/
cd bin/
cat docker-php-entrypoint 
cd /etc/docker/
cd volumes/
rm -rf hasura-footy-v2_db_data/
cat metadata.db 
cat mysql/
cd m
cd mysql/
echo $0
dil
cd /usr/lib/docker
cd /etc/docker
cat key.json
sudo cat key.json
al
which docker
whereis docker
cd /var/lib/docker
sudo cd /var/lib/docker
docker info
docker info | grep storage
docker info | grep Storage
docker service ls
docker container exec -it sgc basah
docker container restart sgc
docker container exec -it sgc bash
docker container run --name mysql-v mysql
docker container run --name sgc socket-group-chat
docker container start sgc
cd ds
touch stack.js
rm stack.js
touch stack.ts
node stack.ts
npm i -g ts-node
ts-node stack.ts
alias w
which w
w
e
t
y
u
i
o
a
d
f
g
h
j
k
z
x
c
v
b
n
m
time zsh -i -c exit
alias sl
alias lock
for i in seq(10)\
echo $i
seq
for in seq 10\
echo 
for i in seq 10\
echo $1
for i in 10\
echo $1
for i in 1,10\
echo $1
for i in range 10\
echo $i
cd apis
cat server.js
vim server.js
sxiv .
im
iam
who
who ami
who docker
echo $USER
docker-buildx
https://github.com/helixarch/debtap.git
git clone https://github.com/helixarch/debtap.git
./debtap
./debtap -h
cp debtap /usr/bin
sudo cp debtap /usr/bin
debtap
debtap -p
wine --version
wine WhatsAppSetup.exe
sudo wine WhatsAppSetup.exe
docker container kill sgc
docker container remove sgc
docker volume create portainer_data
docker run -d -p 8000:8000 -p 9443:9443 --name portainer \\
    --restart=always \\
    -v /var/run/docker.sock:/var/run/docker.sock \\
    -v portainer_data:/data \\
    portainer/portainer-ce:2.11.1
curl https://desktop-stage.docker.com/linux/main/amd64/74258/docker-desktop.deb --output docker-desktop.deb
ls | grep docker
pkgfile
cd debtap
debtap -u
cat debtap
sudo pacman -S pkgfile
fps
docker container exec -it portainer bash
docker container exec -it /portainer bash
docker container exec -it /portainer 
docker container exec -it /portainer sh
docker container exec -it mongodb bash
cd /mnt/programmes/
mkdir js
cd js
mkdir partytown
cd partytown
spotify
debtap docker-desktop.deb
sudo pacman -Q docker-desktop-4.5.0-1-x86_64.pkg.tar.zst
sudo pacman -p docker-desktop-4.5.0-1-x86_64.pkg.tar.zst
pacman -U docker-desktop-4.5.0-1-x86_64.pkg.tar.zst
sudo pacman -S pcp
sudo pacman -U docker-desktop-4.5.0-1-x86_64.pkg.tar.zst
sudo debtap -u
yarn add  @builder.io/partytown\

paru -S subline
paru -S sublime
paru -S sublime-text-4
subl
docker diff mongo
docker container diff mongo
docker container start mongo
dstart mongodn
dstart mongodb
docker container diff mongodb
docker container diff portainer
env
_
echo $_
echo $($_)
echo "$($_)"
echo "my name is $USER"
rm README.md
cat README.md
rm *.jpg
cat .face
chmod +x ./.face
sudo ./.face
./.face
/usr/bin/ls -la
rm yarn.lock
/usr/bin/ls -l
cat a.out
rm a.out
seq 10
for i in range(10)\
echo $i
for i in 1..10\
echo $i
for i in 1...10\
echo $i
for i in 1 2 3 4 5 6 7 8 9 10 0\
echo $i
end=10
echo $end
for ((i=1;i<=$enc;i++))\
do\
echo $i\
done
for ((i=1;i<=$end;i++))\
do\
echo $i\
done
for i in $(seq 10)\
do\
echo $i\
done
for i in $(seq 100)\
do\
echo $i\
done
for i in $(seq 1000)\
do\
echo $i\
done
for i in $(seq 10000)\
do\
echo $i\
done
for i in $(seq 100000)\
do\
echo $i\
done
for i in $(seq 1000000)\
do\
echo $i\
done
#for i in $(seq 1000000)\
#do\
#echo $i\
#done
for i in $(seq 10000000)\
do\
echo $i\
done
ddi
alias ddc
docker rm -v
docker rm --help
docker ls
docker ps
docker network db
docker network create db
docker volume prune
docker volume ls
alias postgres
docker network ls
docker cmopose ps
docker coopose ps
docker compose ps -a
docker compose down
touch docker-compose.yaml
docker compose ps
docker compose ls
docker compose up
docker ps -a
ping
docker inspect mysql | grep IpAddress
docker inspect mysql | grep Ip
docker inspect mysql 
docker container exec -it phpmyadmin bash
ps
docker inspect phpmyadmin | grep IPAdress
cat .zsh_history
cat dotfiles/.zsh_history
docker inspect mysql | grep IPAddress
docker inspect phpmyadmin | grep IPAddress
flameshot
dps | wc -l
docker container remove pgadmin
docker container --help
docker container run --help
docker container run --help | grep network
docker container --network-alias list pgadmin-n-db
docker container list --network-alias pgadmin-n-db
docker container inspect pgadmin-n-db
docker container inspect pgadmin-n-db | grep Networks
docker run -d --name pgadmin --publish 8082:80 -n db -e PGADMIN_DEFAULT_EMAIL=bhumit070@gmail.com -e PGADMIN_DEFAULT_PASSWORD=bhumit070 -v pgadmin:/var/lib/pgadmin dpage/pgadmin4
docker run -d --name pgadmin --publish 8082:80 --network db -e PGADMIN_DEFAULT_EMAIL=bhumit070@gmail.com -e PGADMIN_DEFAULT_PASSWORD=bhumit070 -v pgadmin:/var/lib/pgadmin dpage/pgadmin4
docker compose up -d
docker container stop pgadmin
docker container rm pgadmin
alias pgadmin
docker run -d --name pgadmin --publish 8082:80 -e PGADMIN_DEFAULT_EMAIL=bhumit070@gmail.com -e PGADMIN_DEFAULT_PASSWORD=bhumit070 dpage/pgadmin4
docker container logs pgadmin
sudo useradd nodemon
passwd nodemon
sudo passwd nodemon
lcok
ping 172.17.0.2
ping unifiedportal-mem.epfindia.gov.in
ping youtube.co
docker volume prune 
mkdir volumes
man du
cd volumes
cd vol1
echo "This is a sample file" > sample.txt 
docker container exec -it sgc3 bash
cd /mnt/data/programmes
cd volumes/vol1
echo "\n this is another file " >> sample.txt
cd /mnt/programmes/vol
cd /mnt/data/programmes/volumes
mkdir vol1
mkdir vol2
docker container run --name sgc1 -v "$(pwd)"/vol1 -v "$(pwd)"/vol2 socker-group-chat
docker container run --name sgc1 -v "$(pwd)"/vol1 -v "$(pwd)"/vol2 socket-group-chat
docker container run --name -d sgc1 -v "$(pwd)"/vol1 -v "$(pwd)"/vol2 socket-group-chat
docker container run -d --name sgc1 -v "$(pwd)"/vol1 -v "$(pwd)"/vol2 socket-group-chat
docker container run -d --name sgc2 -v "$(pwd)"/vol1 -v "$(pwd)"/vol2 socket-group-chat
docker container run -d --name sgc1 -v "$(pwd)"/vol1:/app -v "$(pwd)"/vol2 socket-group-chat
docker container run -d --name sgc1 -v "$(pwd)"/vol1:/app -v "$(pwd)"/vol2:/app socket-group-chat
docker container run -d --name sgc1 -v "$(pwd)"/vol1:/app/vol1 -v "$(pwd)"/vol2:/app/vol2 socket-group-chat
docker container run -d --name sgc2 -v "$(pwd)"/vol1:/app/vol1 -v "$(pwd)"/vol2:/app/vol2 socket-group-chat
docker container run -d --name sgc3 --volumes-from sgc1 socket-group-chat
docker container exec -it sgc1 bash
pod
cd paru
cd /mnt/programmes/node/joid
cd joid
rm -r joid
mkdir joi
sudo pacman -S skypeforlinux-stable-bin
paru -S skypeforlinux-stable-bin
sxiv mpv-shot0001.jpg
p
r
ls\\
/
ls\\/
cat slips.txt | echo "ko"
cat slips.txt >> /dev/null
cd /de
cd /dev
cat null
cd /mnt/data/anime/conan
mpv DC\ Epi\ 144.mp4
thunar . & exit
poc
emote
mkdir ins
vs ins/
cd Desktop/
yarn add node-fetch
touch index.html
rm index.
ls | ls
ls & ls
ls && l
ls && ls
cd .vim
cat autoload
cd autoload
la
cat plug.vim
;s
q
close
quit
qui
logout
login
login --help
login -d
login -f
login -h 
login -h "CodingMachine"
sudo login -h "CodingMachine"
login 
cd /root
sudo pacman -S screenlets
sudo pacman -S conky
conky -q
paru -S conky
conky-manager
paru -S conky-manager
killall conky
mkdir -p /mnt/programmes/yaml
vs
cd /mnt/programmes/yaml
touch test.yaml
ya
systemctl start nginx
alias react
react
cd react
npx create-react-app nginx
vite
cd vi
vs vite-project
yarn preview
yarn buil
whereis nginx
cd /etc/nginx
cat nginx.conf
cd /usr/share/
cd nginx
cd html
sudo rm -rf *
cd dist
sudo cp -r * /usr/share/nginx/html/
mkdir watchman
cd watchman
watch -c ls
watch cp
npm link
yarn link global
yarn link
watchman
nodemon
cd no
cd node-docker-mongo
yarn add chokidar
watchman server.js
nmcli c up 'bhumit070'
nmcli c up 'bhumit'
git clone https://github.com/conaticus/chrome-password-manager-extension.git
cd chrome-password-manager-extension
flatpak
flatpak --help
flatpak install --help
flatpak install com.usebottles.bottles
cd De
code ls
code chrome-password-manager-extension
flatpak install com.usebottles.bottles.flatpakref
mkdir chrome-extensions
cd chrome-extensions
touch manifest.json
touch popup.html
touch popup.js
touch background.js
conky
conky -d
paru -S unityhub-beta
sudo pacman -S unreal-engine
paru -S unreal-engine
git clone https://aur.archlinux.org/unreal-engine.git
cd unreal-engine
makepkg -si
sudo pacman -R winetricks
sudo pacman -R wine-mono wine-gecko
sudo pacman -R wine
wine
rm -rf /mnt/data/anime/conan
cd /mnt/data/anime
mkdir conan
rm -rf unreal-engine
git@github.com:EpicGames/UnrealEngine.git --branch release --single-branch
git clone git@github.com:EpicGames/UnrealEngine.git --branch release --single-branch\
\

git clone git@github.com:EpicGames/UnrealEngine.git --branch release --single-branch
rm -rf *.exe
rm yt1s.com\ -\ One\ Piece\ Episode\ 1011\ English\ Subbed\ \ FIXSUB\ \ \ Latest\ Episode_480p.mp4
rm com.usebottles.bottles.flatpakref
rm docker-desktop-4.5.0-1-x86_64.pkg.tar.zst docker-desktop.deb
rm chrome-password-manager-extension brave-agimnkijcaahngcdmfeangaknmldooml-Default.desktop 
sxiv *.jpg
rm -rf debtap
rm -rf main.go
cd op
cat op
rm -rf op
cat index.html
rm index.html
rm Get\ Out\ \(2017\)\ 480p.mkv
rm open.sh
rm Agreement\ of\ Bhumit\ Gantara.pdf
rm -r chrome-password-manager-extension
rm -rf chrome-password-manager-extension
su
su test
visudo
useradd -ag nodemon wheel
useradd -a -g nodemon wheel
usermod -a -G wheel nodemon
sudo usermod -a -G wheel nodemon
chage -m 10 nodemon
sudo chage -m 10 nodemon
sudo ls
sudo su
su nomon
sudo visudo
cat /etc/passwd
cat /etc/passwd | grep nodemon
sudo EDITOR=vim visudo
sudo -i
rm -rf /home/nodemon
sudo rm -rf /home/nodemon
sudo useradd -m nodemon
sudo mkhomedir_helper nodemon
su nodemon
curl -fsSL https://bun.sh/install | bash\

exec zsh
bun
bun --help
bun create
bun create react bun-fast
cd bun-fast
bun dev --host
bun dev
ping 
ping ping
ping ping.com
git clone https://github.com/remy/nodemon.git
cd nodemon
npm i 
npm web
npm rnu web
npm run web
npm run killall
ps auxww
npm run postinstall
npm run test
npm run spec
npm run coverage
npm run commitmsg
cd lib
node version.js
mkdir app-set
cd app-set
yarn add express
touch ok.js
node ok.js
rm -r .
rm -r node_modules
rm .
rm ./
rm ./*
conky --help
conky -t "MEGH CHUTMARIKA"
git clone git@github.com:bhumit070/UnrealEngine.git --branch release --single-branch\

nmcli c up bhumit070
cd chat
cd socket
cd socket-
cd socket-demo
yd webpack
touch webpack.config.js
yd terser-webpack-plugin
vim webpack.config.js
cat package.json
yd webpack@4
npx webpack
git clone https://github.com/sideway/joi.git
cd joi
touch .eslintrc.json
rm .eslintrc.json
cd Do
webpack
mpv [MAILCHECK \[Movie\]\ Sword\ Of\ Stranger\ \[1080p\]\ \[Anime\ Clan\].mkv
mpv \[Movie\]\ Sword\ Of\ Stranger\ \[1080p\]\ \[Anime\ Clan\].mkv
sudo pacman -Syu
ping madarchod.com
cd /var/lib/pacman
rm db.lck
sudorm db.lck
sudo rm db.lck
whoami
pop
reboot
lock
brave
nmcli -v
source $ZSH_PLUGINS_DIR/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh # zsh-syntax-highlighting
source .zshrc
echo $ZSH_PLUGINS_DIR
zsh -f
zsh -d
cd $ZSH_PLUGINS_DIR/zsh-syntax-highlighting
source zsh-syntax-highlighting.zsh
zsh -l =x
zsh -l -x
nginx -t
sudo nginx -t
systemctl status ngixn
systemctl status nginx
lls
cd zsh-autosuggestions
cat zsh-syntax-highlighting.
libinput
libinput list-devices
libinput list-devices | less
i2c_hid_acpu
i2c_hid_acpi
modprobe i2c_hid_acpi
rmmod i2c_hid_acpi
sudo rmmod i2c_hid_acpi
sudo rmmod i2c_hid_acpi i2c_hid
cd youtube
cd te
cd test
cd redi
nvim server.js
cd .config/nvim
cat init.vim
vim init.vim
nvim
nvim .
clipit --help
cd $ZSH_PLUGINS_DIR/zsh-syntax-highlighting/
sudo make
cat Makefile
sudo make install
mirage
cd /dev/sdb
cd /dev/
lsblk
cd /dev/sda
cd /dev/sda2
which sda2
sls
du
du -h
du -h ./wallpapers
du --help
du --help | ignore
du --help | grep ignore
du --help 
du -hl
cd Downloads
mov yt1s.com\ -\ 
mov yt1s.com\ -\ Flutter\ Building\ a\ Tic\ Tac\ Toe\ Game\ From\ Scratch\ \ Crash\ Course\ \ Android\ \ iOS\ _1080p.mp4
mpv yt1s.com\ -\ Flutter\ Building\ a\ Tic\ Tac\ Toe\ Game\ From\ Scratch\ \ Crash\ Course\ \ Android\ \ iOS\ _1080p.mp4
cal -n 3
s
git clone https://gitlab.com/dwt1/wallpapers.git
cd wallpapers
mirage .
mkdir redis
cd redis
mkdir redis-queue
cd redis-queue
vc
redis-cli
chmod +x ./RedisInsight-preview-linux.AppImage
./RedisInsight-preview-linux.AppImage
zsh -c
zsh -c -i
\yarn init -y
yarn add bull bull-board
mkdir queues
touch queues/email.queue.js
mkdir processes
touch processes/email.process.js
cd /mnt
cd /proc
cd - 
cd -
sdf
reset
adfd
ds
fsd
fsdf
sd
set -o vi
\
\
\
\
\
\
\
\

cp slips.txt slips.txt1
cat slips.txt
cat slips1.txt
truncate -s 0 slips.txt1
cat slips.txt1
cd Pictures
vim init.sh
cat init.sh
rm init.sh
mirage Screenshot_2022-01-04_22-48-36.png
ping -c 10localhost
ping -c 10 localhost
ping -c 100 / 2 localhost
ping -c $(expr `100/2`) localhost
cd /mnt/data/office-work
cat insstance-details.md
cd ../../
rm -rf office-work
cd hasura
cd footy
cat Caddyfile
cat docker-compose.yaml
rm -rf footy
cat linkedin
cat linkedin.js
cd linkedin.js
dc
man d
man dc
cd docker-compose
mkdir docker-compose && cd docker-compose
touch comopse.yaml
docker compose -f comopse.yml up
cat comopse.yaml
mv comopse.yaml compose.yml
docker compose -f compose.yml up
mkdir mongo-id
cd mongo-id
mongo
yarn add mongoose
yarn add shortif
yarn add shortid
mkdir proto
cd pro
cd proto
touch str.js
	make
node str.js
curl -v https://github.com/
curl -v https://github.com/ > github
rm github
mpv yt1s.com\ -\ Barfi\ \ EP\ 01\ \ Tu\ Jo\ Mila\ \ Harsh\ Beniwal_1080p.mp4
ping -c $(`expr 100/2`) localhost
ping -c $(expr 100/2) localhost
ping -c $(expr 100 / 2) localhost
ping -c $(expr 1 / 2) localhost
ping -c $(expr 6 / 2) localhost
ls > file
ls | 
ls | wc -l
cat file
rm file
time
timectl
timedatectl --help
cat .xinitrc
which sda1
sed
sed -z
cat .vue
Bas Cha Sudhi Navi Safar | EPISODE 03 | PAYAL | GUJARATI WEB SERIES | ALISHA | RJ HARSHIL\

cat .vuerc
cd .vue-cli-ui
cat db.json
cd shared-data
cd /mnt/data
cd anime
cd conan
alias
alias vim
alias 
alias  | grep vim
alias vvim
cal 
lovk
vvim
cd .wine
cat user.reg
vim .zshrc
cd .vscode-oss
cat argv.json
cd extensions
cat eamodio.gitlens-12.0.1
cd eamodio.gitlens-12.0.1
cat BACKERS.md
cd .wget-hsts
cat .wget-hsts
node
echo $EDITOR
sl sl
sl ; sl ; sl ;sl ;sl
cat .node_repl_history
;d
lsls
ls ; sl
ppppppppp
pppppppppp
ppppppppppppppppppppppppppppppppppppppppppppppppppp
sudo dmidecode -s system-serial-number
lscpu
mkdir graphql-pagination
cd graphql-pagination
yarn add @faker-js/faker -D\

yarn add express express-graphql graphql
nodemon server.js
git commit -m "backend for pagination"
npx create-react-app front
yarn add @apollo/client graphql
yarn add cors
yarn add react-infinite-scroll-component
yarn add nodemon -D
git commit -m "graphql issue regenerated"
cd front
npm start
node server.js
git commit --amend --no-edit
git push -f
cla
cd /mnt/programmes 
mkdir yudiz
git clone https://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@github.com/Vantage-Sports/Vantage-Sports
vs Vantage-Sports
npm i pg
npm sequelize migrate
sequelize migrate
paru -s activitywatch-bin
mkdir go
cd go
vim main.go
go run main.go
rm main
cat main.go
go build main.go
./main
cat main
vim main
rmdir go
rm -rf go
npm run install-deps
npm i
git pull origin main
git fetch --all
git rebase main
git config user.name jaydeep
git config user.email "jaydeep.c@yudiz.in"
vim git config --list
vi git config --list
vi git config
vi git config --local
git config --local --edit
git config --list --local | grep jaydeep
git config --list --local | grep bhoomit
ping skype.com
ping googl
cd yudiz
rm -rf Vantage-Sports\ \(copy\ 1\)
cd Vantage-Sports
cd client
rm -rf node_modules
/usr/bin/rm -rf node_modules
git pull --fast-forward
git pull origin set-availability-jaydeep --rebase
git rebase --abort
git pull origin set-availability-jaydeep --no-rebase
git pull origin set-availability-jaydeep --ff-only
git config --list
git config --list --local
git reset --hard
git pull --ff
git pull
git branch
git pull origin set-availability-jaydeep
thunar
git rebase --continue
cd backend
npm run start
git shortlog -s | cut -c8-
git shortlog -s | cut -c8- | grep bhumit
git shortlog -s | cut -c8- | grep bhoomit
mkdir morgan
cd mo
cd morgan
curl -v http://localhost:3000
ya express
node index.js
nodemon index.js
cat /mnt/programmes/node/morgan/logs/access.log
rm access.log
rm logs/\`access.log
sudo pacman -Syuu
paru -Syuu
mkdir winston-yt-hitesh
vs winston-yt-hitesh
paru -S linux-wifi-hotspot
wificonfig
if
ipconfig
ipconfig /flushdns\

curl ifconfig.me
sudo pacman -S ifconfig
paru -S ifconfig
curl api.ipify.org\

ping localhost
ping 127.0.0.1
cat .Xauthority
yarn add winston express ; mkdir logger ; touch logger/index.js
mkdir logs
pamac
pamac remove
pamac remove --no-save tlp
paru
pamac install tlpui\

tlpui
sudo inxi -Fxz
lsusb
inxi -Fxz
In GRUB add to cmdline:\

usbcore.autosuspend=-1\

cat /etc/default/grub
vim /etc/default/grub
cat /usr/share/grub/themes/manjaro/theme.txt
sudo vim /etc/default/grub
sudo update-grub
cat /sys/module/usbcore/parameters/autosuspend\

journalctl -k
journalctl --follow
git clone https://github.com/vinceliuice/grub2-themes.git
sudo ./install.sh -b -t tela
cd grub2-themes
cd Desktop/grub2-themes
sudo ./install.sh -b -t whitesur
cp -r Mojave\ Night ~/.local/share/plank/themes
cd sequelize
mkdir pg
cd pg
touch index.js
ya express sequelize pg pg-hstore
npm i -g pg
cd backend/api
nvm
sequelize db:
sequelize db:seed
postgress
sequelize db:seed:all
pgadminstop
pgadminstart
docker container start pgadmin
pgadmin
cd /mnt/programmes/node
node .
rbt
cd /mnt/programmes/yudiz
du -h .
du -h Vantage-Sports\ \(copy\ 1\)
du -sh Vantage-Sports\ \(copy\ 1\)
du -sh .
htpo
watch
watch -b
watch -b zip
du -sh Vantage-Sports\ \(copy\ 1\).zip
du -h Vantage-Sports\ \(copy\ 1\).zip
vim bills.json
code bills.json
mv bills.json raghuvansi_tranders_bills.json
thunar .
cd bills_updated
code raghuvansi_tranders_bills.json
git add d.
git commit -m "better error message if firm not selected in view bills"
git commit -m "added delete bill feature"
git commit -m "added printbill method"
yarn && yarn dev
git commit -m "input validation for adding bill"
sudo pacman -R activitywatch
sudo pacman -R activitywatch-bin
ls | grep json
touch matrix.js
code matrix.js; exit
cal -n2
cal -n 2
cd /mnt/programmes/js
node matrix.js
zsh -c -i exit
git commit -m "fix: input validation bug"
git remote -v
nmcli c up 'kashmira ganatra'
wmctrl -l | grep panel |  awk '{print "wmctrl -v -i -r " $1 " -b remove,below"}' | bash\

wmctrl -l | grep panel |  awk '{print "wmctrl -v -i -r " $1 " -b add,above"}' | bash\

wmctrl -l | grep panel |  awk '{print "wmctrl -v -i -r " $1 " -b remove,above"}' | bash\

wmctrl -l | grep panel |  awk '{print "wmctrl -v -i -r " $1 " -b add,below"}' | bash\

git commit -m "view bill ui fix"
pkill -k 3000
fuser -k 3000/tcp
sudo fuser -k 3000/tcp
paru -S qbittorrent-qt5
notify-send "this is an notification"
timedatectl | grep
timedatectl | wc -l
timedatectl | notify-send
notify-send $(timedatectl)
notify-send time is $(timedatectl)
notify-send time is $timedatectl
notify-send "time is $timedatectl"
notify-send "time is $(timedatectl)"
sudo pacman -S plank
plank -d
plank & echo 
plank --preferences
xfconf-query -c xfce4-panel -p /panels/panel-0/autohide -T\

xfconf-query -c xfce4-panel -p /panels/panel-0/autohide -T --create
xfconf-query -c xfce4-panel -p /panels/panel-0/autohide --create -T
xfconf-query --create -c xfce4-panel -p /panels/panel-0/autohide -T\

7. Can I unhide the panel in Xfce using a key press rather than using mouse cursor hover to reveal it? - Ask Ubuntu
xfconf-query --help\

vim panel.bash
chmod +x panel.bash
xfconf-query -c xfce4-panel -p /panels/panel-0/autohide -s true\

xfconf-query -c xfce4-panel -p /panels/panel-0/autohide -s false\

xfconf-query -c xfce4-panel --create -p /panels/panel-0/autohide -s false\

xfconf-query -c xfce4-panel -p /panels/panel-0/autohide-behavior -s 0\

xfconf-query -c xfce4-panel -p /panels/panel-0/autohide-behavior -s 1 \

xfconf-query -c xfce4-panel -p /panels/panel-0/autohide-behavior -s 2\

./panel.bash
cp panel.bash panel
sudo cp /usr/bin
sudo cp panel /usr/bin/panel-toggle
panel-toggle
od
alias od
od --help
yarn add pdf-creator-node
cd api
cat ./pdf/template.html
alias mysql
git commit -m "added session"
echo $HOME
mysqls
docker container exec -it mysql bash
cd ../Documents
docker cp .:/bills1.sql mysql
docker cp
docker cp mysql:/bills1.sql .
cat bills1.sql
cp bills1.sql /mnt/programmes/bills_updated
echo $($HOME)
git reset --soft HEAD~1
git stash --name "session ids"
git stash --m "session ids"
sequelize seed
sequelize migration:generate
sequelize migration:generate "Bills"
sequelize migration:generate --name "Bills"
git clean -ds
sequelize --init\
\

sequelize --init
sequelize -c initial\
\

sequelize -c
sequelize initial
sequelize init:config
rm -rf migrations
sequelize init:migrations
sequelize
sequelize migration:create --name 'Create Table'
$dbPassword
echo $dbPassword
echo $timedatectl
echo $(timedatectl)
yarn add async
sequelize migrate:all
yarn add mysql
yarn add mysql2
sequelize migrate:initial
sequelize db:migrate
git clean -fd
cd /mnt/programmes
mkdir ds
mv ds dsa
code dsa
bash --versio
bash --version
as = sd
sdd = sd
as=sd
echo $as
touch tree.js
vim tree.js
vim 
node tree.js
smatrix
cmatrix
cmatrix -b
cmatrix -a
cmatrix 
cmatrix -r
cmatrix -u 
cmatrix -u 3
cmatrix -u 10
cmatrix --help
cmatrix -o
cmatrix -s
nmcli c up bhumit
sudo pacman -S emulator
emulator
sudo pacman -R plank
ps aux | grep plank
fuser -k 54160
fuser -k 54160/tcp
sudo fuser -k 54160/tcp
plank
plank --help
nmcli c up 'Redmi Note 8'
touch demo.drawio
htop
sudo pacman -S fish
fish
ping youtube.com
cd ~/.docker
cd ~/.dot
cd ~/dotfiles
lsusb.py
touch zsh-setup.sh
code zsh-setup.sh
code
exa
cd /Users/bhumit070/dotfiles/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
cd /Users/bhumit070/dotfiles/zsh/plugins/
/usr/bin/ls .
brew install exa
./zsh-autosuggestions.
./zsh-autosuggestions
chmod +x zsh-setup.sh
./zsh-setup.sh
nano .zshrc
szh
brwe
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"\

brew cleanup
brew doctor
brew
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
/opt/homebrew/bin/brew shellenv
zsh
code .zshrc
code ~/.zshrc
code ~/.config/alacritty/alacritty.yml
brew install clippy
brew install --cask clipy
ðƒ¿ƒ¸ƒ­
mv zsh-setup.sh ~/dotfiles/setup
brew install cat
brew install bat
cat .localized
cat .DS_Store
brew install nvm
nvm install --lts
node -v
npm -v
npm i -g yarn sequelize
rm .zshrc1
cp .zshrc dotfiles
git commit -m "added zsh-setup files and some new lines in .zshrc"
git push origin main
cd setup
./docker.sh
brew install notion
echo $PS1
cd Desktop
echo $PS1 > ps1.txt
cat ps1.txt
rm ps1.txt
alacritty
terminal
mkdir screenshots
gpr
git pull request
git --help
unset $TNUX
unset $TMUX
exit
docker run -d -p 80:80 docker/getting-started
docker run -p 80:80 docker/getting-started
brew install tmix
brew install tmux
tmux
brew install --cask google-chrome
cat .gitignore
brew install nvim
vim .gitignore
git commit -m "added gitignore file"
git config --global user.name "bhumit070"
git config --global user.email "ganatrabhoomit070@gmail.com"
git config --global --list
sudo nvram AutoBoot=%00\
\

pof
sudo nvram AutoBoot=%03\
\

cd /Applications/Utilities
sudo nvram AutoBoot=%00
brew install docker
brew install discord
brew install skype
mkdir ssh-keys
mkdir github gitlab
cd git
ssh-keygen -t rsa -b 2048 -C "github ssh key"
rm -rf .
ssh-keygen -t rsa -b 2048 -C "github ssh key" .
ssh-keygen -t rsa -b 2048 -C "github ssh key" 
cat github
/usr/bin/cat github
/opt/bin/cat github
whereis cat
/bin/cat github
open ~/.ssh/config
mkdir ~/.ssh
touch ~/.ssh/config
chmod 444 github.pub
cat gihub.pub
cat github.pub
cat ~/.ssh/config
ssh-add -t github.pub
mkdir projects
cd ~/.ssh
cat known_hosts
cat config
cd ssh-keys
ssh-keygen -t ed25519 -c "ganatrabhoomit070@gmail.com"
~/.ssh/config
chmod 400 github.pub
ssh-add github.pub
rm -rf *
ssh-keygen -t ed25519 -C "ganatrabhoomit070@gmail.com"
eval "$(ssh-agent -s)"
ssh-add /Users/bhumit070/.ssh/id_ed25519
cat ~/.ssh/id_ed25519.pu
cat ~/.ssh/id_ed25519.pub
cd
git clone git@github.com:bhumit070/bills_updated.git
docker pull myslq
postgres
ddc
docker pull mysql:5.7
docker image ls
mysql
docker pull mysql
docker pull mysql:latest
ls -lag
ls -la
ls -lah
brew install mysql
brew services restart mysql
mysql -u root
vs dotfiles
mysql -uroto
phpmyadmin
ifconfig
ping http://49.34.82.57/
ping 49.34.82.57
alias phpmyadmin
docker run -d --name phpmyadmin --link "localhost:3306":db -p 8080:80 phpmyadmin
docker run -d --name phpmyadmin --link "127.0.01:3306":db -p 8080:80 phpmyadmin
docker run -d --name phpmyadmin --link db -p 8080:80 phpmyadmin
cat .env.example .env
cat .env.example > .env
mkdir github
cd github
git clone https://github.com/powerline/fonts.git
./install.sh
cd 
cd Library
cd fon
cd fonts
mkdir api-monetization
cd api-monetization
brew install stripe/stripe-cli/stripe\

stripe login
stripe listen --forward-to localhost:8080/webhook
yarn add express stripe 
touch server.js
npm i -g nodemon
nodemon .
php
php -v
sudo apachectl start
cp dotfiles ~/.config/nvim/
mkdir ~/.config/nvim
cp dotfiles/init.vim ~/.config/
cp dotfiles/init.vim ~/.config/nvim
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
vim ~/.ssh/config
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \\
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
vim
mkdir node
mkdir ts-node
rm -rf ts-node
rmdir ts-node
mkdir test-jest
vs test-jest
docker
docker run
docker run hello-world
docker network create elastic\

docker network create elastic
docker pull docker.elastic.co/elasticsearch/elasticsearch
docker pull docker.elastic.co/elasticsearch/elasticsearch:8.1.2\

docker run --name es-node01 --net elastic -p 9200:9200 -p 9300:9300 -it docker.elastic.co/elasticsearch/elasticsearch:8.1.2
docker run -d --name es-node01 --net elastic -p 9200:9200 -p 9300:9300 -it docker.elastic.co/elasticsearch/elasticsearch:8.1.2
dps
docker container start 986a3a1c7282
docker pull docker.elastic.co/kibana/kibana:8.1.2\

brew install mpv
ping google.com
ld
du -sh projects
vs bills_updated
git commit -m "add phone number in firm"
git commit -m "added bill number and location of bill person"
lsof
cat .zshrc
git commit -m "added phone number in view bill"
brew services stop apache
brew services stop apachetop
cd node
../
mkdir dsa
cd dsa
touch binary_search.js
node binary_search.js
rm binary_search.js
cd projects
mkdir ecom
l
cd ecom
yarn init -y
brew install --cask jumpcut\

jumpcut
brew --help
brew lis
brew uninstall jumpcut
ping bluedart.com
timedatect;
timedatectl
/bin/ls 
bash
/usr/bin/ls
cat .zprofile
cd .nvm
cat .editorconfig
nvm ls
npx ts-node --help
npx tsc --help
touch .gitignore
rm -rf .vscode
npm i -g sequelize-cli
rmdir -r config models migrations seeders
rmdir config models migrations seeders
rm -r models config
rmdir -db
rmdir db
rm -rf .git
git init
git commit -m "initialed app"
cd db
sequelize init
cd ../
rm -rf db
mkdir db
mkdir db/models
touch db/index.ts
yarn add sequelize reflect-metadata sequelize-typescript
npx ts-node src/db/index.ts
yarn add express 
yarn add bcrypt 
yarn add sequelize mysql2
alias yd
yd typescript ts-node
npx tsc --init
mkdir src
touch src/app.ts
yd @types/express @types/node ts-node
yarn add dotenv
yd @types/dotenv
yd nodemonm
yd nodemon
touch .env
yarn add bcrypt
yarn add @types/bcrypt
ping apple.in
ping apple.com
yarn remove reflect-metadata sequelize-typescript
git commit -m "Added user model"
brew list | grep mysql
brew uninstall mysql
brew list | grep apache
brew list | grep -i apache
ps aux
cal
mysql -uroot
sudo apachectl -k stop\

sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist\

sudo lsof -i:80
yarn add joi
brew install --cask postman
defaults write -g ApplePressAndHoldEnabled -bool false\

defaults write -g ApplePressAndHoldEnabled -bool true\

$ defaults write com.microsoft.VSCode ApplePressAndHoldEnabled -bool false              # For VS Code\
$ defaults write com.microsoft.VSCodeInsiders ApplePressAndHoldEnabled -bool false      # For VS Code Insider\
$ defaults write com.visualstudio.code.oss ApplePressAndHoldEnabled -bool false         # For VS Codium\
$ defaults write com.microsoft.VSCodeExploration ApplePressAndHoldEnabled -bool false   # For VS Codium Exploration users\
$ defaults delete -g ApplePressAndHoldEnabled                                           # If necessary, reset global default
rm -rf helpers
cd src
mkdir helpers
touch some.sh
chmod +ax some.sh
chmod +a some.sh
chmod +x some.sh
./some.sh
rm -rf some.sh
git commit -m "added signup api"
ya jsonwebtoken
yd @types/jsonwebtoken
git commit -m "added signin api"
git commit -m "added verify token method"
yd eslint
npx eslint --init
yarn
git commit -m "added eslint"
mkdir logger
yarn add winston
brew install stram
brew install steam
time zsh -c -i exit
sl -lah
yarn add @types/morgan
git commit -m "added morgan logger"
rm -rf logger
yarn build
du -h dist
du -sh src
du -sh dist
yarn add nodemailer
yd @types/nodemailer
git checkout .
yarn add morgan
yarn start
yarn de
git commit -m "added verify email api"
git commit --amend 
git push origin mucho
brew install --cask android-studio
brew tap dart-lang/dart
brew install dart\

dart
brew uninstall dart
brew install --cask flutter
flutter
flutter doctor
flutter doctor --android-licenses
brew install android-sdk
brew list
which android-sdk
where android-sdk
git commit -m "add jwt expiry limit"
git log --oneline
git log --oneline | wc -l
pwd
cd ~/Library/
cd Services
cd OpenTerminal.workflow
sl
cd Contents
cat Info.plist
git commit -m "isAdmin field to user"
git push origin master
git commit -m "updated response function params"
rm combined.log error.log
yarn add cookie-parser
git add .
yd @types/cookie-parser
npx ts-node --files src/app.ts
yarn dev
git log
git commit -m "add token to cookie and req object"
git push
git log --oneline | wc -l | xargs
alias ddi
docker images
cd dotfiles
ls
git statis
git status
vsc
